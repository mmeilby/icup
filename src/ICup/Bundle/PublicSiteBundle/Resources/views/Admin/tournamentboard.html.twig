{% extends "ICupPublicSiteBundle:Masters:edit.html.twig" %}

{% trans_default_domain "admin" %}

{% block adminbody %}
    <div ng-app="tournamentBoardModule">
        <div ng-controller="tournamentBoardController as ctrl">
            <section layout="column">
                <md-content flex>
                    <md-content flex>
                        <md-toolbar class="md-menu-toolbar">
                            <div layout="row">
                                <md-toolbar-filler layout layout-align="center center" style="background-color: #8c8c8c; color: white">
                                    <span class="fa fa-4x fa-cogs"></span>
                                </md-toolbar-filler>
                                <div ng-cloak>
                                    <h2 class="md-toolbar-tools">{{ 'FORM.TOURNAMENTBOARD.TITLE'|trans|upper }}</h2>
                                    <md-menu-bar>
                                        <md-menu>
                                            <button ng-click="$mdOpenMenu()">
                                                {% trans %}FORM.TOURNAMENTBOARD.PLANNING.CAPTION{% endtrans %}
                                            </button>
                                            <md-menu-content>
                                                <md-menu-item>
                                                    <md-button ng-href="{{ path('_edit_category_list', { 'tournamentid': tournament.id }) }}">
                                                        {% trans %}FORM.TOURNAMENTBOARD.LISTCATEGORIES.CAPTION{% endtrans %}
                                                        {#
                                                        <a class="list-group-item" href="{{ path('_edit_category_list', { 'tournamentid': tournament.id }) }}">
                                                            <h3 class="list-group-item-heading">{% trans %}FORM.TOURNAMENTBOARD.LISTCATEGORIES.CAPTION{% endtrans %}</h3>
                                                            <p class="list-group-item-text">{% trans %}FORM.TOURNAMENTBOARD.LISTCATEGORIES.DESCRIPTION{% endtrans %}</p>
                                                        </a>
                                                        #}
                                                    </md-button>
                                                </md-menu-item>
                                                <md-menu-item>
                                                    <md-button ng-href="{{ path('_edit_site_list', { 'tournamentid': tournament.id }) }}">
                                                        {% trans %}FORM.TOURNAMENTBOARD.LISTSITES.CAPTION{% endtrans %}
                                                        {#
                                                        <a class="list-group-item" href="{{ path('_edit_site_list', { 'tournamentid': tournament.id }) }}">
                                                            <h3 class="list-group-item-heading">{% trans %}FORM.TOURNAMENTBOARD.LISTSITES.CAPTION{% endtrans %}</h3>
                                                            <p class="list-group-item-text">{% trans %}FORM.TOURNAMENTBOARD.LISTSITES.DESCRIPTION{% endtrans %}</p>
                                                        </a>
                                                        #}
                                                    </md-button>
                                                </md-menu-item>
                                {% if is_granted('ROLE_EDITOR_ADMIN') %}
                                                <md-menu-divider></md-menu-divider>
                                                <md-menu-item>
                                                    <md-button ng-href="{{ path('_admin_wipe_matches', { 'tournamentid': tournament.id }) }}">
                                                        {% trans %}FORM.LISTCATEGORIES.BUTTON.WIPE{% endtrans %}
                                                    </md-button>
                                                </md-menu-item>
                                                <md-menu-item>
                                                    <md-button ng-href="{{ path('_admin_wipe_qmatches', { 'tournamentid': tournament.id }) }}">
                                                        {% trans %}FORM.LISTCATEGORIES.BUTTON.QWIPE{% endtrans %}
                                                    </md-button>
                                                </md-menu-item>
                                {% endif %}
                                            </md-menu-content>
                                        </md-menu>
                                    </md-menu-bar>
{#
                                                    <md-menu>
                                                        <md-button aria-label="Open demo menu" ng-click="$mdOpenMenu($event)">
                                                        </md-button>
                                                        <md-menu-content width="6">
                                                            <md-menu-item ng-repeat="item in [1, 2, 3]">
                                                                <md-button ng-click="ctrl.announceClick($index)">
                                                                    <md-icon md-menu-align-target md-svg-icon="call:no-sim"></md-icon>
                                                                    Option {{ '{{item}}' }}
                                                                </md-button>
                                                            </md-menu-item>
                                                        </md-menu-content>
                                                    </md-menu>
#}
                                </div>
                            </div>
                        </md-toolbar>
                    </md-content>

                    <md-content flex>
                        <md-tabs md-dynamic-height md-border-bottom>
                            {#
                                ---------------------
                                TOURNAMENT
                                ---------------------
                            #}
                            <md-tab label="{% trans %}FORM.TOURNAMENTBOARD.TOURNAMENT.CAPTION{% endtrans %}">
                                <md-content class="md-padding">
                                    <div class="page">
                                        <h2>{{ tournament.name }}</h2>
                                        <table class="table table-striped">
                                            <thead>
                                            <tr>
                                                <td>{% trans %}FORM.DASHBOARD.TOURNAMENTS.LEGEND.KEY{% endtrans %}</td>
                                                <td>{% trans %}FORM.DASHBOARD.TOURNAMENTS.LEGEND.EDITION{% endtrans %}</td>
                                                <td>{% trans %}FORM.DASHBOARD.TOURNAMENTS.LEGEND.DESCRIPTION{% endtrans %}</td>
                                                <td>{% trans %}FORM.DASHBOARD.TOURNAMENTS.LEGEND.STATUS{% endtrans %}</td>
                                                <td class="narrow-col"></td>
                                            </tr>
                                            </thead>
                                            <tbody>
                                            <tr>
                                                <td>
                                                    <b>{{ tournament.key }}</b>
                                                </td>
                                                <td>
                                                    {{ tournament.edition }}
                                                </td>
                                                <td>
                                                    {{ tournament.description }}
                                                </td>
                                                <td>
                                                    {{ ['FORM.DASHBOARD.TOURNAMENTS.STATUS.',tstat]|join|trans }}
                                                </td>
                                                <td>
                                                    <a href="{{ path('_edit_tournament_chg', { 'tournamentid': tournament.id }) }}">
                                                        <span class="fa fa-pencil"></span>
                                                    </a>
                                                </td>
                                            </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <md-list layout="row">
                                        <md-list-item>
                                            <md-button ng-click="chgOptions($event)" aria-label="{% trans %}FORM.TOURNAMENTBOARD.TOURNAMENTOPTIONS.CAPTION{% endtrans %}">
<!--
                                            <md-button ng-href="{{ path('_edit_tournament_options', { 'tournamentid': tournament.id }) }}" aria-label="{% trans %}FORM.TOURNAMENTBOARD.TOURNAMENTOPTIONS.CAPTION{% endtrans %}">
-->
                                                <span class="md-padding fa fa-2x fa-cog"></span><br />
                                                {% trans %}FORM.TOURNAMENTBOARD.TOURNAMENTOPTIONS.LABEL{% endtrans %}
                                            </md-button>
                                        </md-list-item>
                                        <md-list-item>
                                            <md-button ng-href="{{ path('_edit_timeslot_list', { 'tournamentid': tournament.id }) }}" aria-label="{% trans %}FORM.TOURNAMENTBOARD.LISTTIMESLOTS.CAPTION{% endtrans %}">
                                                <span class="md-padding fa fa-2x fa-clock-o"></span><br />
                                                {% trans %}FORM.TOURNAMENTBOARD.LISTTIMESLOTS.LABEL{% endtrans %}
                                            </md-button>
                                        </md-list-item>
                                        <md-list-item>
                                            <md-button ng-href="{{ path('_edit_news_list', { 'tournamentid': tournament.id }) }}" aria-label="{% trans %}FORM.TOURNAMENTBOARD.NEWS.CAPTION{% endtrans %}">
                                                <span class="md-padding fa fa-2x fa-newspaper-o"></span><br />
                                                {% trans %}FORM.TOURNAMENTBOARD.NEWS.LABEL{% endtrans %}
                                            </md-button>
                                        </md-list-item>
                                        <md-list-item>
                                            <md-button ng-href="{{ path('_edit_event_list', { 'tournamentid': tournament.id }) }}" aria-label="{% trans %}FORM.TOURNAMENTBOARD.STATUS.CAPTION{% endtrans %}">
                                                <span class="md-padding fa fa-2x fa-calendar"></span><br />
                                                {% trans %}FORM.TOURNAMENTBOARD.STATUS.LABEL{% endtrans %}
                                            </md-button>
                                        </md-list-item>
                                        <md-list-item>
                                            <md-button ng-href="{{ path('_edit_import_match_unres', { 'tournamentid': tournament.id }) }}" aria-label="{% trans %}FORM.TOURNAMENTBOARD.MATCHIMPORTUNRES.CAPTION{% endtrans %}">
                                                <span class="md-padding fa fa-2x fa-trophy"></span><br />
                                                {% trans %}FORM.TOURNAMENTBOARD.MATCHIMPORTUNRES.LABEL{% endtrans %}
                                            </md-button>
                                        </md-list-item>
                                        <md-list-item>
                                            <md-button ng-href="{{ path('_edit_list_matches', { 'tournamentid': tournament.id }) }}" aria-label="{% trans %}FORM.TOURNAMENTBOARD.REPORT.CAPTION{% endtrans %}">
                                                <span class="md-padding fa fa-2x fa-book"></span><br />
                                                {% trans %}FORM.TOURNAMENTBOARD.REPORT.LABEL{% endtrans %}
                                            </md-button>
                                        </md-list-item>
                                        <md-list-item>
                                            <md-button ng-href="{{ path('_edit_matchlist_print', { 'tournamentid': tournament.id, 'date': date()|date('d-m-Y') }) }}" aria-label="{% trans %}FORM.TOURNAMENTBOARD.MATCHPRINT.CAPTION{% endtrans %}">
                                                <span class="md-padding fa fa-2x fa-print"></span><br />
                                                {% trans %}FORM.TOURNAMENTBOARD.MATCHPRINT.LABEL{% endtrans %}
                                            </md-button>
                                        </md-list-item>
                                        <md-list-item>
                                            <md-button ng-href="{{ path('_edit_match_maint', { 'tournamentid': tournament.id }) }}" aria-label="{% trans %}FORM.TOURNAMENTBOARD.MATCHMAINT.CAPTION{% endtrans %}">
                                                <span class="md-padding fa fa-2x fa-pencil-square-o"></span><br />
                                                {% trans %}FORM.TOURNAMENTBOARD.MATCHMAINT.LABEL{% endtrans %}
                                            </md-button>
                                        </md-list-item>
<!--
                                        <md-list-item>
                                            <md-button href="http://google.com"
                                                       title="Launch Google.com in new window"
                                                       target="_blank"
                                                       ng-disabled="true"
                                                       aria-label="Google.com"
                                                       class="md-accent" >
                                                <span class="md-padding fa fa-2x fa-bars"></span><br />
                                                Launch
                                            </md-button>
                                        </md-list-item>
-->
                                    </md-list>
                                </md-content>
                            </md-tab>
                            {#
                                ---------------------
                                CATEGORIES
                                ---------------------
                            #}
                            <md-tab label="{% trans %}FORM.TOURNAMENTBOARD.LISTCATEGORIES.CAPTION{% endtrans %}">
                                <md-content class="md-padding" ng-controller="assignGroupsController" ng-cloak>
                                    <div class="row md-padding">
                                        <div class="col-md-4 col-sm-6">
                                            <md-button class="md-raised md-hue-1" ng-class="{'md-primary': categories.length==0}" ng-click="addCategory($event)" ng-hide="!dataReady">
                                                {% trans %}FORM.TOURNAMENTBOARD.ADDCATEGORY{% endtrans %}
                                            </md-button>
                                            <md-button class="md-raised md-hue-1" ng-click="updateCategory($event)" ng-hide="!selectedCategory || !dataReady">
                                                {% trans %}FORM.TOURNAMENTBOARD.UPDCATEGORY{% endtrans %}
                                            </md-button>
                                            <md-button class="md-raised md-hue-1" ng-click="delCategory($event)" ng-hide="!selectedCategory || !dataReady || groups.length > 0">
                                                {% trans %}FORM.TOURNAMENTBOARD.DELCATEGORY{% endtrans %}
                                            </md-button>
                                        </div>
                                        <div class="col-md-8 col-sm-6">
                                            <md-button class="md-raised md-hue-1" ng-class="{'md-primary': groups.length==0}" ng-click="addGroup($event)" ng-hide="!selectedCategory || !dataReady">
                                                {% trans %}FORM.QMATCHPLANNING.ADDGROUP{% endtrans %}
                                            </md-button>
                                            <md-button class="md-raised md-hue-1" ng-click="categoryOptions($event)" ng-hide="!selectedCategory || !dataReady">
                                                {% trans %}FORM.QMATCHPLANNING.OPTIONS{% endtrans %}
                                            </md-button>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4 col-sm-6">
                                            <ul class="list-group">
                                                <li class="list-group-item" ng-repeat="category in categories | orderBy: ['gender', 'classification', '-age'] track by category.id">
                                                    <span class="badge">{{ '{{ category.preliminary_groups }}' }}</span>
                                                    <span ng-click="selectCategory(category.id)" ng-class="{'bold': category.id==selectedCategory}">
                                                        {% trans from 'tournament' %}CATEGORY{% endtrans %} {{ '{{ category.name }}' }} - {{ '{{ category.classification_translated }}' }}
                                                    </span>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="col-md-8 col-sm-6">
                                            <div ng-show="selectedCategory && dataReady">
                                                <h3>{% trans %}FORM.QMATCHPLANNING.GROUPS{% endtrans %}</h3>
                                                <p>{% trans %}FORM.QMATCHPLANNING.EXPLAIN{% endtrans %}</p>
                                                <hr />
                                                <div class="row">
                                                    {# Show group cards #}
                                                    <div class="col-md-6" ng-repeat="group in groups track by group.group.id" ng-drop="true" ng-drop-success="onDropGroup(group.group.id)">
                                                        <h4>
                                                            <span class="label label-primary">{% trans from "tournament" %}GROUP{% endtrans %} {{ '{{ group.group.name }}' }}</span>
                                                            &nbsp;<span class="fa fa-trash" ng-hide="group.teams.length" ng-click="deleteGroup(group.group.id)"></span>
                                                        </h4>
                                                        <div class="row"
                                                             data-allow-transform="true"
                                                             ng-drag="true" ng-drag-data="team" ng-drag-success="onDragTeam(group.group.id, team.id)"
                                                             ng-repeat="team in group.teams track by team.id"
                                                        >
                                                            <div class="col-md-12">
                                                                <img src="{{ '{{ flagsDir+team.flag }}' }}"
                                                                     alt="{{ '{{ team.country }}' }}"
                                                                     title="{{ '{{ team.country }}' }}" ng-if="team.flag" class="flag">
                                                                {{ '{{ team.name }}' }}
                                                            </div>
                                                        </div>
                                                        <h4 ng-hide="group.teams.length">
                                                            <span class="badge">{% trans %}FORM.MATCHPLANNING.NOTEAMS{% endtrans %}</span>
                                                        </h4>
                                                    </div>
                                                    {# Show unassigned teams card #}
                                                    <div class="col-md-6" ng-drop="true" ng-drop-success="onDropUnassigned()">
                                                        <h4>
                                                            <span class="label label-primary">{{ 'FORM.LISTGROUPS.UNASSIGNED'|trans|upper }}</span>
                                                        </h4>
                                                        <div class="row"
                                                             data-allow-transform="true"
                                                             ng-drag="true" ng-drag-data="team" ng-drag-success="onDragUnassignedTeam(team.id)"
                                                             ng-repeat="team in unassigned.teams track by team.id"
                                                        >
                                                            <div class="col-md-12">
                                                                <img src="{{ '{{ flagsDir+team.flag }}' }}"
                                                                     alt="{{ '{{ team.country }}' }}"
                                                                     title="{{ '{{ team.country }}' }}" ng-if="team.flag" class="flag">
                                                                {{ '{{ team.name }}' }}
                                                            </div>
                                                        </div>
                                                        <h4 ng-hide="unassigned.teams.length">
                                                            <span class="badge">{% trans %}FORM.MATCHPLANNING.NOTEAMS{% endtrans %}</span>
                                                        </h4>
                                                    </div>
                                                    {# Basket card #}
                                                    <div class="col-md-6" ng-drop="true" ng-drop-success="onDropBasket()">
                                                        <span class="fa-stack fa-2x">
                                                          <i class="fa fa-trash fa-stack-1x"></i>
                                                          <i class="fa fa-ban fa-stack-2x text-danger" ng-show="group"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                                <hr />
                                                <h4 ng-hide="groups.length">{% trans %}FORM.QMATCHPLANNING.NOGROUPS{% endtrans %}</h4>
                                            </div>
                                            <div ng-show="categories.length>0 && !selectedCategory && dataReady">
                                                <h3><span class="fa fa-hand-o-left"></span>&nbsp;{% trans %}FORM.QMATCHPLANNING.SELECTCATEGORY.TITLE{% endtrans %}</h3>
                                                <p>{% trans %}FORM.QMATCHPLANNING.SELECTCATEGORY.TEXT{% endtrans %}</p>
                                            </div>
                                            <div ng-show="!dataReady" style="padding: 40px;">
                                                <div layout="row" layout-sm="column" layout-align="space-around">
                                                    <div class="lead">{% trans %}FORM.QMATCHPLANNING.WAIT.TEXT{% endtrans %}</div>
                                                </div>
                                                <div layout="row" layout-sm="column" layout-align="space-around">
                                                    <md-progress-circular md-mode="indeterminate"></md-progress-circular>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </md-content>
                            </md-tab>
                            {#
                            ---------------------
                            VENUES
                            ---------------------
                            #}
                            <md-tab label="{% trans %}FORM.TOURNAMENTBOARD.LISTSITES.CAPTION{% endtrans %}">
                                <md-content class="md-padding" ng-controller="venuesController" ng-cloak layout="column">
                                    <md-toolbar layout="row" class="md-hue-2">
                                        <div class="md-toolbar-tools">
                                            <span>{% trans %}FORM.PLAYGROUND.VENUES{% endtrans %}</span>
                                            <span flex></span>
                                            <md-button class="md-primary md-raised md-hue-2" ng-click="addVenue($event)">
                                                {% trans %}FORM.PLAYGROUND.TITLE.ADD{% endtrans %}
                                            </md-button>
                                        </div>
                                    </md-toolbar>
                                    <md-chips ng-model="sites" readonly="false" md-enable-chip-edit="true" md-on-add="addSite($chip)" md-on-remove="delSite($chip)" md-on-select="selectSite($chip)" md-transform-chip="transformSite($chip)" placeholder="{% trans %}FORM.SITE.TITLE.ADD{% endtrans %}" secondary-placeholder="Tast ny lokation her...">
                                        <md-chip-template>
                                            <strong>{{ '{{ $chip.name }}' }}</strong>
                                        </md-chip-template>
                                    </md-chips>
                                    <div layout-gt-sm="row" layout="column">
                                        <div flex-gt-sm="40" flex>
                                            <md-content>
                                                <md-list class="md-dense" flex>
                                                    <md-list-item class="md-2-line" ng-class="{'bg-google-yellow': venue.id==selectedVenue}" ng-repeat="venue in venues | filter: siteFilter | orderBy: ['site.name', 'no'] track by venue.id" ng-click="selectVenue(venue.id)">
                                                        <div class="md-list-item-text" layout="column" flex-gt-sm="100">
                                                            <h3>{{ '{{ venue.name }}' }}</h3>
                                                            <h4>{{ '{{ venue.site.name }}' }}</h4>
                                                        </div>
                                                        <md-divider></md-divider>
                                                    </md-list-item>
                                                </md-list>
                                            </md-content>
                                        </div>
                                        <div flex-gt-sm="60" flex>
                                            <md-content class="md-padding" layout="column">
                                                <md-tabs md-dynamic-height md-border-bottom>
                                                    <md-tab label="{% trans %}FORM.PLAYGROUND.BASICS{% endtrans %}">
                                                        <div ng-if="selectedVenue">
                                                                <h3>{{ '{{ venue.name }}' }}</h3>
                                                                <md-divider></md-divider>
                                                                <h4>{{ '{{ venue.site.name }}' }}</h4>
                                                                <ui-gmap-google-map center='map.center' zoom='map.zoom' options='map.options' ng-if="venue.location">
                                                                    <ui-gmap-marker idKey='1' coords='marker.point' options='marker.options' events='marker.events'></ui-gmap-marker>
                                                                    <ui-gmap-layer type="TrafficLayer" show="map.showTraficLayer"></ui-gmap-layer>
                                                                </ui-gmap-google-map>
                                                                <h4 ng-if="venue.weight">{% trans %}FORM.PLAYGROUND.WEIGHT{% endtrans %}: {{ '{{ venue.weight }}' }}</h4>
                                                                <md-divider></md-divider>
                                                                <p>&nbsp;</p>
                                                                <div layout="row">
                                                                    <span flex></span>
                                                                    <md-button class="md-raised" ng-click="delVenue($event)">
                                                                        <span class="fa fa-trash" style="font-size: 150%; color: darkred"></span>
                                                                    </md-button>
                                                                    <md-button class="md-raised" ng-click="updateVenue($event)">
                                                                        <span class="fa fa-pencil" style="font-size: 140%"></span>
                                                                    </md-button>
                                                                </div>
                                                                <p>&nbsp;</p>
                                                            </div>
                                                    </md-tab>
                                                    <md-tab label="{% trans %}FORM.PLAYGROUND.CALENDAR{% endtrans %}">
                                                        <div ng-show="selectedVenue">
                                                                <h3>{{ '{{ venue.name }}' }}</h3>
                                                                <md-divider></md-divider>
                                                                <h4>{{ '{{ venue.site.name }}' }}</h4>
                                                                <div layout="row">
                                                                    <md-datepicker ng-model="calendar.date"
                                                                                   md-placeholder="{% trans %}FORM.TOURNAMENTBOARD.DATE{% endtrans %}"
                                                                                   md-min-date="calendar.minDate" md-max-date="calendar.maxDate">
                                                                    </md-datepicker>
                                                                    <span flex></span>
                                                                    <md-button class="md-raised" ng-click="descendDate()" ng-disabled="calendar.date <= calendar.minDate">
                                                                        <span class="fa fa-minus" style="font-size: 110%"></span>
                                                                    </md-button>
                                                                    <md-button class="md-raised" ng-click="advanceDate()" ng-disabled="calendar.date >= calendar.maxDate">
                                                                        <span class="fa fa-plus" style="font-size: 110%"></span>
                                                                    </md-button>
                                                                </div>
                                                                <p>&nbsp;</p>
                                                                <daypilot-calendar id="dp" config="config" events="events"></daypilot-calendar>
                                                            </div>
                                                    </md-tab>
                                                </md-tabs>
                                            </md-content>
                                        </div>
                                    </div>
{#
                                                <md-subheader class="md-no-sticky">
                                                    <span>Lokaliteter</span>
                                                    <span flex></span>
                                                    <md-button class="md-primary md-raised md-hue-2" ng-click="updateSite($event)" ng-show="selectedVenue">
                                                        <span class="fa fa-pencil" style="font-size: 140%"></span>
                                                    </md-button>
                                                    <md-button class="md-primary md-raised md-hue-2" ng-click="delSite($event)" ng-show="selectedVenue">
                                                        <span class="fa fa-trash" style="font-size: 150%"></span>
                                                    </md-button>
                                                </md-subheader>

                                                        <p>
                                                            <span>{% trans %}FORM.PLAYGROUND.NO{% endtrans %} {{ '{{ venue.no }}' }}, </span>
                                                            <span ng-hide="venue.weight==0">{% trans %}FORM.PLAYGROUND.WEIGHT{% endtrans %}: {{ '{{ venue.weight }}' }}, </span>
                                                            <span>{% trans %}FORM.PLAYGROUND.LOCATION{% endtrans %} {{ '{{ venue.location }}' }}</span>
                                                        </p>


                                    <div class="row">
                                        <div class="col-md-4 col-sm-6">
                                            <ul class="list-group">
                                                <li class="list-group-item" ng-repeat="venue in venues | orderBy: ['site', 'no'] track by venue.id">
                                                    <span class="badge">{{ '{{ venue.no }}' }}</span>
                                                    <span ng-click="selectVenue(venue.id)" ng-class="{'bold': venue.id==selectedVenue}">
                                                        {{ '{{ venue.name }}' }} - {{ '{{ venue.site }}' }}
                                                    </span>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="col-md-8 col-sm-6">
                                            <div ng-show="selectedCategory && dataReady">
                                                <h3>{% trans %}FORM.QMATCHPLANNING.GROUPS{% endtrans %}</h3>
                                                <p>{% trans %}FORM.QMATCHPLANNING.EXPLAIN{% endtrans %}</p>
                                                <hr />
                                                <div class="row">
                                                    <div class="col-md-6" ng-repeat="group in groups track by group.group.id" ng-drop="true" ng-drop-success="onDropGroup(group.group.id)">
                                                        <h4>
                                                            <span class="label label-primary">{% trans from "tournament" %}GROUP{% endtrans %} {{ '{{ group.group.name }}' }}</span>
                                                            &nbsp;<span class="fa fa-trash" ng-hide="group.teams.length" ng-click="deleteGroup(group.group.id)"></span>
                                                        </h4>
                                                        <div class="row"
                                                             data-allow-transform="true"
                                                             ng-drag="true" ng-drag-data="team" ng-drag-success="onDragTeam(group.group.id, team.id)"
                                                             ng-repeat="team in group.teams track by team.id"
                                                        >
                                                            <div class="col-md-12">
                                                                <img src="{{ '{{ flagsDir+team.flag }}' }}"
                                                                     alt="{{ '{{ team.country }}' }}"
                                                                     title="{{ '{{ team.country }}' }}" ng-if="team.flag" class="flag">
                                                                {{ '{{ team.name }}' }}
                                                            </div>
                                                        </div>
                                                        <h4 ng-hide="group.teams.length">
                                                            <span class="badge">{% trans %}FORM.MATCHPLANNING.NOTEAMS{% endtrans %}</span>
                                                        </h4>
                                                    </div>
                                                    <div class="col-md-6" ng-drop="true" ng-drop-success="onDropUnassigned()">
                                                        <h4>
                                                            <span class="label label-primary">{{ 'FORM.LISTGROUPS.UNASSIGNED'|trans|upper }}</span>
                                                        </h4>
                                                        <div class="row"
                                                             data-allow-transform="true"
                                                             ng-drag="true" ng-drag-data="team" ng-drag-success="onDragUnassignedTeam(team.id)"
                                                             ng-repeat="team in unassigned.teams track by team.id"
                                                        >
                                                            <div class="col-md-12">
                                                                <img src="{{ '{{ flagsDir+team.flag }}' }}"
                                                                     alt="{{ '{{ team.country }}' }}"
                                                                     title="{{ '{{ team.country }}' }}" ng-if="team.flag" class="flag">
                                                                {{ '{{ team.name }}' }}
                                                            </div>
                                                        </div>
                                                        <h4 ng-hide="unassigned.teams.length">
                                                            <span class="badge">{% trans %}FORM.MATCHPLANNING.NOTEAMS{% endtrans %}</span>
                                                        </h4>
                                                    </div>
                                                    <div class="col-md-6" ng-drop="true" ng-drop-success="onDropBasket()">
                                                        <span class="fa-stack fa-2x">
                                                          <i class="fa fa-trash fa-stack-1x"></i>
                                                          <i class="fa fa-ban fa-stack-2x text-danger" ng-show="group"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                                <hr />
                                                <h4 ng-hide="groups.length">{% trans %}FORM.QMATCHPLANNING.NOGROUPS{% endtrans %}</h4>
                                            </div>
                                            <div ng-show="categories.length>0 && !selectedCategory && dataReady">
                                                <h3><span class="fa fa-hand-o-left"></span>&nbsp;{% trans %}FORM.QMATCHPLANNING.SELECTCATEGORY.TITLE{% endtrans %}</h3>
                                                <p>{% trans %}FORM.QMATCHPLANNING.SELECTCATEGORY.TEXT{% endtrans %}</p>
                                            </div>
                                            <div ng-show="!dataReady" style="padding: 40px;">
                                                <div layout="row" layout-sm="column" layout-align="space-around">
                                                    <div class="lead">{% trans %}FORM.QMATCHPLANNING.WAIT.TEXT{% endtrans %}</div>
                                                </div>
                                                <div layout="row" layout-sm="column" layout-align="space-around">
                                                    <md-progress-circular md-mode="indeterminate"></md-progress-circular>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
#}
                                </md-content>
                            </md-tab>
                            {#
                            ---------------------
                            ENROLLMENTS
                            ---------------------
                            #}
                            <md-tab label="{% trans %}FORM.TOURNAMENTBOARD.LISTCLUBS.CAPTION{% endtrans %}">
                                <md-content class="md-padding" ng-controller="listClubsController" ng-cloak>
                                    <div class="row">
                                        <div class="col-sm-12 md-padding">
                                            <md-button class="md-raised md-hue-1" ng-href="{{ path('_host_club_new', {'tournamentid': tournament.id }) }}">
                                                {% trans %}FORM.CLUB.TITLE.ADD{% endtrans %}
                                            </md-button>
                                            <md-button class="md-raised md-hue-1" ng-href="{{ path('_edit_import_team', {'tournamentid': tournament.id }) }}">
                                                {% trans %}FORM.TEAMIMPORT.TITLE{% endtrans %}
                                            </md-button>
                                            <md-button class="md-raised md-warn" ng-href="{{ path('_admin_wipe_teams', {'tournamentid': tournament.id }) }}">
                                                {% trans %}FORM.LISTCLUBS.BUTTON.WIPE{% endtrans %}
                                            </md-button>
                                        </div>
                                    </div>
                                    <md-tabs md-dynamic-height md-border-bottom>
                                        <md-tab label="{% trans %}FORM.LISTCLUBS.LEGEND{% endtrans %}">
                                            <md-content class="md-padding">
                                                <div class="row" ng-show="countries.length && dataReady">
                                                    {# list countries #}
                                                    <div class="col-md-6 col-lg-4" ng-repeat="country in countries">
                                                        <div class="panel panel-default">
                                                            <div class="panel-heading">
                                                                <img src="{{ '{{ flagsDir+country.flag }}' }}"
                                                                     alt="{{ '{{ country.name }}' }}"
                                                                     title="{{ '{{ country.name }}' }}" ng-if="country.flag" class="flag">
                                                                <b>{{ '{{ country.name }}' }}</b>
                                                            </div>
                                                            {# list clubs #}
                                                            <table class="table table-striped">
                                                                <tr ng-repeat="club in country.clubs">
                                                                    <td>
                                                                        <span>{{ '{{ club.name }}' }}</span>
                                                                    </td>
                                                                    <td class="narrow-col">
                                                                        <span class="label label-default" ng-show="club.enrolled" ng-click="updateEnrollment(club, $event)">{{ '{{ club.enrolled }}' }}</span>
                                                                    </td>
                                                                    <td class="narrow-col">
                                                                        <span class="fa fa-cog" aria-label="{% trans %}FORM.CLUB.TITLE.CHG{% endtrans %}" ng-click="updateClub(club, $event)">
                                                                            <md-tooltip md-direction="top" md-visible="tooltipVisible" md-autohide="false">
                                                                                {% trans %}FORM.CLUB.TITLE.CHG{% endtrans %}
                                                                            </md-tooltip>
                                                                        </span>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div ng-show="!countries.length && dataReady">
                                                    <h1 class="label">{{'FORM.LISTCLUBS.NOCLUB'|trans|upper}}</h1>
                                                </div>
                                            </md-content>
                                        </md-tab>
                                        <md-tab label="{% trans %}FORM.LISTCLUBS.LEGEND_TEAMS{% endtrans %}">
                                            <md-content class="md-padding">
                                                <div class="row">
                                                    <div class="col-md-6 col-lg-4" ng-repeat="category in team_categories | orderBy: ['gender', 'classification', '-age'] track by category.id">
                                                        <div class="panel panel-default">
                                                            <div class="panel-heading">
                                                                <h4>{% trans from 'tournament' %}CATEGORY{% endtrans %} {{ '{{ category.name }}' }} - {{ '{{ category.classification_translated }}' }}</h4>
                                                            </div>
                                                            {# list clubs #}
                                                            <table class="table table-striped">
                                                                <tr ng-repeat="team in category.teams | orderBy: ['index', 'country.name', 'name']">
                                                                    <td>
                                                                        <img src="{{ '{{ flagsDir+team.country.flag }}' }}"
                                                                             alt="{{ '{{ team.country.name }}' }}"
                                                                             title="{{ '{{ team.country.name }}' }}" ng-if="team.country.flag" class="flag">
                                                                        {{ '{{ team.name }}' }}
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div ng-show="!countries.length && dataReady">
                                                    <h1 class="label">{{'FORM.LISTCLUBS.NOCLUB'|trans|upper}}</h1>
                                                </div>
                                            </md-content>
                                        </md-tab>
                                    </md-tabs>
                                </md-content>
                            </md-tab>
                            {#
                                ---------------------
                                MATCH PLANNING
                                ---------------------
                            #}
                            <md-tab label="{% trans %}FORM.TOURNAMENTBOARD.PLANNING.CAPTION{% endtrans %}">
                                <md-content class="md-padding" ng-controller="matchPlanningController" ng-cloak id="toastAnchor">
                                    <div class="row">
                                        <div class="col-sm-9 md-padding">
                                            <md-button class="md-raised md-hue-1" ng-class="{'md-primary': !matches_planned}" ng-click="planMatches($event)">
                                                {% trans %}FORM.MATCHPLANNING.PLAN.TITLE{% endtrans %}
                                            </md-button>
                                            <md-button class="md-raised md-hue-1" ng-class="{'md-primary': matches_planned}" ng-click="savePlan($event)" ng-hide="!matches_planned">
                                                {% trans %}FORM.MATCHPLANNING.SAVE.TITLE{% endtrans %}
                                            </md-button>
                                            <md-button class="md-raised md-hue-1" ng-click="resetPlan($event)" ng-hide="!matches_planned">
                                                {% trans %}FORM.MATCHPLANNING.RESET.TITLE{% endtrans %}
                                            </md-button>
                                        </div>
                                        <div class="col-sm-3 md-padding text-right">
                                            <md-button class="md-fab md-hue-1" ng-click="uploadPlan($event)">
                                                <span title="{% trans %}FORM.MATCHPLANNING.MATCHIMPORT.TITLE{% endtrans %}" class="fa fa-upload" style="font-size: 2.4em"></span>
                                            </md-button>
                                            <md-button class="md-fab md-primary" ng-href="{{ path('_edit_match_planning_download', { 'tournamentid': tournament.id }) }}" ng-hide="!matches_planned">
                                                <span title="{% trans %}FORM.MATCHPLANNING.DOWNLOAD.TITLE{% endtrans %}" class="fa fa-download" style="font-size: 2.4em"></span>
                                            </md-button>
                                        </div>
                                    </div>

                                    <div class="row" ng-show="matches_planned">
                                        <div class="col-sm-5">
                                            <md-content layout-padding>
                                                <md-card>
                                                    <md-card-title>
                                                        <md-card-title-text>
                                                            <span class="md-headline">{% trans %}FORM.TOURNAMENTBOARD.SEARCH.TITLE{% endtrans %}</span>
                                                            <span class="md-subhead">{% trans %}FORM.TOURNAMENTBOARD.SEARCH.SUBTITLE{% endtrans %}</span>
                                                        </md-card-title-text>
                                                    </md-card-title>
                                                    <form name="criteriaForm" ng-submit="search_matches(search_object)" class="md-padding" ng-cloak>
                                                        <md-input-container class="md-block">
                                                            <label>{% trans %}FORM.TOURNAMENTBOARD.TEAM{% endtrans %}</label>
                                                            <md-select name="venue" ng-model="search_object.team" ng-model-options="{trackBy: '$value.id'}">
                                                                <md-option ng-value="{ 'id': 0 }">{% trans %}FORM.TOURNAMENTBOARD.ANY{% endtrans %}</md-option>
                                                                <md-option ng-repeat="team in teams | orderBy: ['country', 'name']" ng-value="{{ '{{ team }}' }}">
                                                                    {{ '{{ team.name }}' }} ({{ '{{ team.country }}' }})
                                                                </md-option>
                                                            </md-select>
                                                        </md-input-container>
                                                        <md-input-container class="md-block">
                                                            <label>{% trans %}FORM.TOURNAMENTBOARD.CATEGORY{% endtrans %}</label>
                                                            <md-select name="category" ng-model="search_object.category" ng-model-options="{trackBy: '$value.id'}">
                                                                <md-option ng-value="{ 'id': 0 }">{% trans %}FORM.TOURNAMENTBOARD.ANY{% endtrans %}</md-option>
                                                                <md-option ng-repeat="category in categories" ng-value="{{ '{{ category }}' }}">
                                                                    {% trans from 'tournament' %}CATEGORY{% endtrans %} {{ '{{ category.name }}' }} - {{ '{{ category.classification_translated }}' }}
                                                                </md-option>
                                                            </md-select>
                                                        </md-input-container>
                                                        <md-input-container class="md-block">
                                                            <label>{% trans %}FORM.TOURNAMENTBOARD.GROUP{% endtrans %}</label>
                                                            <md-select name="group" ng-model="search_object.group" ng-model-options="{trackBy: '$value.id'}">
                                                                <md-option ng-value="{ 'id': 0 }">{% trans %}FORM.TOURNAMENTBOARD.ANY{% endtrans %}</md-option>
                                                                <md-option ng-repeat="group in groups" ng-value="{{ '{{ group }}' }}">{{ '{{ group.name }}' }}</md-option>
                                                            </md-select>
                                                        </md-input-container>
                                                        <md-input-container class="md-block">
                                                            <label>{% trans %}FORM.TOURNAMENTBOARD.PLAYGROUND{% endtrans %}</label>
                                                            <md-select name="venue" ng-model="search_object.venue" ng-model-options="{trackBy: '$value.id'}">
                                                                <md-option ng-value="{ 'id': 0 }">{% trans %}FORM.TOURNAMENTBOARD.ANY{% endtrans %}</md-option>
                                                                <md-option ng-repeat="venue in venues" ng-value="{{ '{{ venue }}' }}">{{ '{{ venue.name }}' }}</md-option>
                                                            </md-select>
                                                        </md-input-container>
                                                        <div layout="row">
                                                            <md-datepicker ng-model="search_object.date"
                                                                           md-placeholder="{% trans %}FORM.TOURNAMENTBOARD.DATE{% endtrans %}"
                                                                           md-min-date="minDate" md-max-date="maxDate">
                                                            </md-datepicker>
                                                            <span flex></span>
                                                            <md-button class="md-raised" ng-click="search_object.date=null">
                                                                {% trans %}FORM.TOURNAMENTBOARD.ANYDATE{% endtrans %}
                                                            </md-button>
                                                        </div>
                                                    </form>
                                                    <md-card-actions layout="row" layout-align="start center">
                                                        <md-input-container>
                                                            <label>{% trans %}FORM.TOURNAMENTBOARD.LIMIT{% endtrans %}</label>
                                                            <md-select name="limit" ng-model="limit" ng-model-options="{trackBy: '$value'}" required>
                                                                <md-option ng-value="10">{% trans %}FORM.TOURNAMENTBOARD.LIMIT10{% endtrans %}</md-option>
                                                                <md-option ng-value="25">{% trans %}FORM.TOURNAMENTBOARD.LIMIT25{% endtrans %}</md-option>
                                                                <md-option ng-value="100">{% trans %}FORM.TOURNAMENTBOARD.LIMIT100{% endtrans %}</md-option>
                                                                <md-option ng-value="500">{% trans %}FORM.TOURNAMENTBOARD.LIMIT500{% endtrans %}</md-option>
                                                            </md-select>
                                                        </md-input-container>
                                                    </md-card-actions>
                                                </md-card>
                                            </md-content>
                                        </div>
                                        <div class="col-sm-7">
                                            <div class="panel panel-warning" ng-show="unassigned_categories.length && matches.length==0">
                                                <div class="panel-heading">
                                                    <div class="row">
                                                        <div class="col-sm-9">
                                                            <h4>{% trans %}FORM.MATCHPLANNING.PLANNINGINCOMPLETE.TITLE{% endtrans %}</h4>
                                                            <p>{% trans %}FORM.MATCHPLANNING.PLANNINGINCOMPLETE.DESCRIPTION{% endtrans %}</p>
                                                        </div>
                                                        <div class="col-sm-3 text-center">
                                                            <span class="fa fa-exclamation-triangle fa-5x"></span>
                                                        </div>
                                                    </div>
                                                    <div class="row" ng-repeat="category in unassigned_categories | orderBy: ['gender', 'classification', '-age'] track by category.id">
                                                        <div class="col-sm-12">
                                                            <span class="badge">{{ '{{ category.unassigned_matches }}' }}</span>
                                                            <span>{% trans from 'tournament' %}CATEGORY{% endtrans %} {{ '{{ category.name }}' }} - {{ '{{ category.classification_translated }}' }}</span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="panel panel-success" ng-show="unassigned_categories.length==0 && matches.length==0">
                                                <div class="panel-heading">
                                                    <div class="row">
                                                        <div class="col-sm-9">
                                                            <h4>{% trans %}FORM.MATCHPLANNING.PLANNINGCOMPLETE.TITLE{% endtrans %}</h4>
                                                            <p>{% trans %}FORM.MATCHPLANNING.PLANNINGCOMPLETE.DESCRIPTION{% endtrans %}</p>
                                                        </div>
                                                        <div class="col-sm-3 text-center">
                                                            <span class="fa fa-check fa-5x"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div ng-show="matches.length">
                                                <div class="row title">
                                                    <div class="col-md-1 text-center">{% trans from "tournament" %}LEGEND.NO{% endtrans %}</div>
                                                    <div class="col-md-2 text-right">
                                                        {% trans from "tournament" %}LEGEND.TIME{% endtrans %}<br />
                                                        {% trans from "tournament" %}LEGEND.PLAYGROUND{% endtrans %}
                                                    </div>
                                                    <div class="col-md-2 text-center">
                                                        {% trans from "tournament" %}LEGEND.CATEGORY{% endtrans %}<br />
                                                        {% trans from "tournament" %}LEGEND.GROUP{% endtrans %}
                                                    </div>
                                                    <div class="col-md-7">
                                                        {% trans from "tournament" %}LEGEND.HOMETEAM{% endtrans %}<br />
                                                        {% trans from "tournament" %}LEGEND.AWAYTEAM{% endtrans %}
                                                    </div>
                                                </div>
                                                <div class="row" ng-mouseenter="msover=true" ng-mouseleave="msover=false" ng-init="msover=false"
                                                     ng-class-odd="'bg-table-row'"
                                                     ng-class="{ 'bg-facebook-darkblue white': msover, 'alert-warning': match.status == 'W', 'alert-danger': match.status == 'A' }"
                                                     ng-repeat="match in matches | filter:matchFilter | limitTo:limit as results track by match.uid"
                                                     ng-click="editMatch(match, $event)"
                                                >
                                                    <div class="col-md-12 bg-facebook-lightblue facebook-blue" ng-show="$first || match.date.text != results[$index-1].date.text">
                                                        <h4><b>{% trans %}FORM.TOURNAMENTBOARD.DATE{% endtrans %} - {{ '{{ match.date.text }}' }}</b></h4>
                                                    </div>
                                                    <div class="col-md-1 text-center">{{ '{{ match.matchno }}' }}</div>
                                                    <div class="col-md-2 text-right">
                                                        {{ '{{ match.time.text }}' }}<br />
                                                        {% trans from "tournament" %}LEGEND.PLAYGROUND{% endtrans %} {{ '{{ match.venue.no }}' }}
                                                    </div>
                                                    <div class="col-md-2 text-center">
                                                        {{ '{{ match.category.name }}' }}<br />
                                                        {{ '{{ match.group.name }}' }}
                                                    </div>
                                                    <div class="col-md-7">
                                                        <img src="{{ '{{ flagsDir+match.home.flag }}' }}"
                                                             alt="{{ '{{ match.home.country }}' }}"
                                                             title="{{ '{{ match.home.country }}' }}" ng-if="match.home.flag" class="flag">
                                                        {{ '{{ match.home.name }}' }}<br />
                                                        <img src="{{ '{{ flagsDir+match.away.flag }}' }}"
                                                             alt="{{ '{{ match.away.country }}' }}"
                                                             title="{{ '{{ match.away.country }}' }}" ng-if="match.away.flag" class="flag">
                                                        {{ '{{ match.away.name }}' }}
                                                    </div>
                                                </div>
                                                <div class="md-margin md-padding" md-whiteframe="10" layout layout-align="center center" ng-if="results.length==0">
                                                    <h4 flex="80">{% trans %}FORM.TOURNAMENTBOARD.NORESULTS{% endtrans %}</h4>
                                                </div>
                                            </div>

                                        </div>
                                    </div>

                                    <div class="panel panel-info" ng-show="!matches_planned">
                                        <div class="panel-heading">
                                            <div class="row">
                                                <div class="col-sm-9">
                                                    <h4>{% trans %}FORM.MATCHPLANNING.NEEDTOPLAN.TITLE{% endtrans %}</h4>
                                                    <p>{% trans %}FORM.MATCHPLANNING.NEEDTOPLAN.DESCRIPTION{% endtrans %}</p>
                                                </div>
                                                <div class="col-sm-3 text-center">
                                                    <span class="fa fa-info fa-5x"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </md-content>
                            </md-tab>
                        </md-tabs>
                    </md-content>
                </md-content>
            </section>
        </div>
    </div>
{% endblock %}

{% block meta %}
    <style type="text/css">
        .angular-google-map-container { height: 200px; }
    </style>
{% endblock %}

{% block javascripts %}
    <script src="{{ url('bazinga_jstranslation_js', { 'domain': 'errors' }) }}"></script>
    <script src="{{ url('bazinga_jstranslation_js', { 'domain': 'admin' }) }}"></script>
    <script src="{{ url('bazinga_jstranslation_js', { 'domain': 'tournament' }) }}"></script>
    <script src="{{ asset('bundles/icuppublicsite/angular-bootstrap-file-field.min.js') }}"></script>
    <script>
        $("#form_file").fileinput({'showUpload':true, 'showPreview':false, 'showRemove':false, 'browseLabel':'{% trans %}FORM.MATCHPLANNING.MATCHIMPORT.BROWSE{% endtrans %}', 'uploadLabel':'{% trans %}FORM.MATCHPLANNING.MATCHIMPORT.UPLOAD{% endtrans %}'});
    </script>
    <script src="{{ asset('bundles/icuppublicsite/angular-google-maps.min.js') }}"></script>
    <script src="{{ asset('bundles/icuppublicsite/daypilot/daypilot-all.min.js') }}" type="text/javascript"></script>
    <link type="text/css" rel="stylesheet" href="{{ asset('bundles/icuppublicsite/daypilot/themes/calendar_icup.css') }}" />
    <script type="text/javascript">
        function DialogController($scope, $mdDialog) {
            $scope.submit = function(param) {
                $mdDialog.hide(param);
            };
            $scope.cancel = function() {
                $mdDialog.cancel();
            };
        }
        function ShowError($mdDialog, errors, title) {
            var content = [];
            angular.forEach(errors, function(error, key) {
                var errorTxt = Translator.trans('ERROR.'+error+'.TITLE', {}, 'errors');
                if (errorTxt == 'ERROR.'+error+'.TITLE') {
                    errorTxt = error;
                }
                this.push(errorTxt);
            }, content);
            $mdDialog.show($mdDialog.alert().clickOutsideToClose(true).title(title).textContent(content.join(' ')).ok('{% trans %}FORM.CLOSE{% endtrans %}'));
        }
        angular
        .module('tournamentBoardModule', ['ngMaterial', 'ngMessages', 'ngDraggable', 'bootstrap.fileField', 'uiGmapgoogle-maps', 'daypilot'])
        .filter("translate", function() {
            return function(key, domain, vars){
                return Translator.trans(key, vars ? vars : {}, domain ? domain : 'admin');
            }
        })
        .factory('Tournament', function ($http, $mdDialog) {
            var tournament = { 'id': {{ tournament.id }} };
            var categories = [], sites = [], venues = [], timeslots = [], events = [];
            return {
                getTournament: function () { return tournament; },
                getCategories: function () { return categories; },
                setCategories: function (cat) { categories = cat; },
                getSites: function () { return sites; },
                setSites: function (s) { sites = s; },
                getVenues: function () { return venues; },
                setVenues: function (v) { venues = v; },
                getTimeslots: function () { return timeslots; },
                setTimeslots: function (t) { timeslots = t; },
                getEvents: function () { return events; },
                setEvents: function (e) { events = e; }
            };
        })
        .config(function(uiGmapGoogleMapApiProvider) {
            uiGmapGoogleMapApiProvider.configure({
                key: 'AIzaSyA1sKwFJvFiIc9I_9R34PhjknL3O9W61yA',
                libraries: 'weather,geometry,visualization'
            });
        })
        /*
         ------------------------------------
         TOURNAMENT BOARD
         ------------------------------------
         */
        .controller('tournamentBoardController', function($scope, $http, $mdDialog, $mdMedia, $mdToast, Tournament) {
            $scope.flagsDir = "{{ asset('bundles/icuppublicsite/images/flags/') }}";
            $scope.tournament = Tournament.getTournament();
            $scope.genders = [ { 'id': 'F', 'name': '{% trans %}FORM.CATEGORY.SEX.FEMALE{% endtrans %}' }, { 'id': 'M', 'name': '{% trans %}FORM.CATEGORY.SEX.MALE{% endtrans %}' } ];
            $scope.classifications = [ { 'id': 'U', 'name': '{% trans %}FORM.CATEGORY.CLASS.UNDER{% endtrans %}' }, { 'id': 'O', 'name': '{% trans %}FORM.CATEGORY.CLASS.OVER{% endtrans %}' } ];
            $scope.$watch('categories', function (newValue, oldValue) {
                if (newValue !== oldValue) Tournament.setCategories(newValue);
            });
            $http.get(Routing.generate('_rest_list_categories', { 'tournamentid': $scope.tournament.id })).then(
                function(data) {
                    $scope.categories = data.data;
                },
                function (response) {
                    ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTCATEGORIES.CAPTION{% endtrans %}');
                });
            $scope.$watch('sites', function (newValue, oldValue) {
                if (newValue !== oldValue) Tournament.setSites(newValue);
            });
            $http.get(Routing.generate('_rest_list_sites', { 'tournamentid': $scope.tournament.id })).then(
                function(data) {
                    $scope.sites = data.data;
                },
                function (response) {
                    ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTSITES.CAPTION{% endtrans %}');
                });
            $scope.$watch('venues', function (newValue, oldValue) {
                if (newValue !== oldValue) Tournament.setVenues(newValue);
            });
            $http.get(Routing.generate('_rest_list_playgrounds', { 'tournamentid': $scope.tournament.id })).then(
                function(data) {
                    $scope.venues = data.data;
                },
                function (response) {
                    ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTSITES.CAPTION{% endtrans %}');
                });
            $scope.$watch('timeslots', function (newValue, oldValue) {
                if (newValue !== oldValue) Tournament.setTimeslots(newValue);
            });
            $http.get(Routing.generate('_rest_list_timeslots', { 'tournamentid': $scope.tournament.id })).then(
                function(data) {
                    $scope.timeslots = data.data;
                },
                function (response) {
                    ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTTIMESLOTS.CAPTION{% endtrans %}');
                });
            $scope.chgOptions = function (ev) {
                $http.get(Routing.generate('_rest_get_tournament', { 'tournamentid': $scope.tournament.id })).then(
                    function(data) {
                        var dlgScope = $scope.$new();
                        dlgScope.tournament = data.data.tournament;
                        dlgScope.options_object = dlgScope.tournament.option;
                        dlgScope.doMoveUp = function (idx, ev) {
                            if (idx > 0) {
                                var obj = dlgScope.options_object.order.splice(idx, 1);
                                dlgScope.options_object.order.splice(idx-1, 0, obj[0]);
                            }
                        };
                        dlgScope.doMoveDown = function (idx, ev) {
                            var obj = dlgScope.options_object.order.splice(idx, 1);
                            dlgScope.options_object.order.splice(idx+1, 0, obj[0]);
                        };
                        $mdDialog.show({
                            controller: DialogController,
                            scope: dlgScope,
                            templateUrl: '{{ asset('bundles/icuppublicsite/templates/edittmntoptdlg.html') }}',
                            parent: angular.element(document.body),
                            targetEvent: ev,
                            clickOutsideToClose:true,
                            fullscreen: $mdMedia('sm') || $mdMedia('xs')
                        }).then(
                            function(options_object) {
                                $http.post(Routing.generate('_rest_tournament_options_update', {'tournamentid': dlgScope.tournament.id }), options_object).then(
                                    function (data) {
                                        $mdToast.show(
                                                $mdToast.simple()
                                                        .textContent('{% trans %}FORM.TOURNAMENTOPTIONS.TITLE.UPDATED{% endtrans %}')
                                                        .position('top right')
                                                        .hideDelay(3000)
                                        );
                                    },
                                    function (response) {
                                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.TOURNAMENTOPTIONS.TITLE.CHG{% endtrans %}');
                                    });
                            });
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.TOURNAMENTOPTIONS.TITLE.CHG{% endtrans %}');
                    });
            };
        })
        /*
         ------------------------------------
         LIST CATEGORIES
         ------------------------------------
         */
        .controller('assignGroupsController', function($scope, $http, $mdDialog, $mdMedia, Tournament) {
            $scope.$watch(function () { return Tournament.getCategories(); }, function (newValue, oldValue) {
                if (newValue !== oldValue) $scope.categories = newValue;
            });
            $scope.onDragUnassignedTeam=function(teamid){
                var index = $scope.unassigned.teams.findIndex(function (team) {
                    return team.id == teamid;
                });
                var team = $scope.unassigned.teams.splice(index, 1);
                $scope.team = team[0];
                $scope.group = null;
                $scope.draggingAllowed = true;
            };
            $scope.onDragTeam=function(groupid, teamid){
                var group = $scope.groups.find(function (group) {
                    return group.group.id == groupid;
                });
                var index = group.teams.findIndex(function (team) {
                    return team.id == teamid;
                });
                var team = group.teams.splice(index, 1);
                $scope.team = team[0];
                $scope.group = group.group;
                $scope.draggingAllowed = true;
            };
            $scope.onDropUnassigned=function(){
                if ($scope.draggingAllowed) {
                    $scope.draggingAllowed = false;
                    $scope.unassigned.teams.push($scope.team);
                    if ($scope.group) {
                        $http.get(Routing.generate('_rest_assign_del', { 'groupid': $scope.group.id, 'teamid': $scope.team.id })).then(
                            function(data) {
                                getGroups();
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.QMATCHPLANNING.GROUPS{% endtrans %}');
                            });
                    }
                }
            };
            $scope.onDropGroup=function(groupid){
                if ($scope.draggingAllowed) {
                    $scope.draggingAllowed = false;
                    var group = $scope.groups.find(function (group) {
                        return group.group.id == groupid;
                    });
                    group.teams.push($scope.team);
                    if ($scope.group) {
                        $http.get(Routing.generate('_rest_assign_del', { 'groupid': $scope.group.id, 'teamid': $scope.team.id })).then(
                            function(data) {
                                $http.get(Routing.generate('_rest_assign_add', { 'groupid': groupid, 'teamid': $scope.team.id })).then(
                                    function(data) {
                                        getGroups();
                                    },
                                    function (response) {
                                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.QMATCHPLANNING.GROUPS{% endtrans %}');
                                    });
                        },
                        function (response) {
                            ShowError($mdDialog, response.data.errors, '{% trans %}FORM.QMATCHPLANNING.GROUPS{% endtrans %}');
                        });
                    }
                    else {
                        $http.get(Routing.generate('_rest_assign_add', { 'groupid': groupid, 'teamid': $scope.team.id })).then(
                            function(data) {
                                getGroups();
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.QMATCHPLANNING.GROUPS{% endtrans %}');
                            });
                    }
                }
            };
            $scope.onDropBasket=function(){
                if ($scope.group == null) {
                    $http.get(Routing.generate('_rest_enroll_del', {'teamid': $scope.team.id})).then(
                            function (data) {
                                getGroups();
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.QMATCHPLANNING.GROUPS{% endtrans %}');
                            });
                }
                else {
                    var group = $scope.groups.find(function (group) {
                        return group.group.id == $scope.group.id;
                    });
                    group.teams.push($scope.team);
                }
            };
            $scope.addCategory = function(ev) {
                var dlgScope = $scope.$new();
                dlgScope.category_object = {
                    'name': '',
                    'gender': { 'id': 'F' },
                    'classification': { 'id': 'U' },
                    'age': 18,
                    'trophys': 4,
                    'topteams': 0,
                    'strategy': 2,
                    'matchtime': 60
                };
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editcategorydlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose:true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                }).then(
                    function(category_object) {
                        $http.post(Routing.generate('rest_category_create', { 'tournamentid': $scope.tournament.id }), {
                            'name': dlgScope.category_object.name,
                            'gender': dlgScope.category_object.gender.id,
                            'classification': dlgScope.category_object.classification.id,
                            'age': dlgScope.category_object.age,
                            'trophys': dlgScope.category_object.trophys,
                            'topteams': dlgScope.category_object.topteams,
                            'strategy': dlgScope.category_object.strategy,
                            'matchtime': dlgScope.category_object.matchtime
                        })
                        .then(
                            function (data) {
                                var newid = data.data.id;
                                $http.get(Routing.generate('_rest_list_categories', { 'tournamentid': $scope.tournament.id })).then(
                                    function(data) {
                                        $scope.categories = data.data;
                                        $scope.selectCategory(newid);
                                        Tournament.setCategories($scope.categories);
                                    },
                                    function (response) {
                                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTCATEGORIES.CAPTION{% endtrans %}');
                                    });
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.CATEGORY.TITLE.ADD{% endtrans %}');
                            });
                    });
            };
            $scope.updateCategory = function(ev) {
                var dlgScope = $scope.$new();
                dlgScope.category_object = {
                    'name': $scope.category.name,
                    'gender': { 'id': $scope.category.gender },
                    'classification': { 'id': $scope.category.classification },
                    'age': $scope.category.age,
                    'trophys': $scope.category.trophys,
                    'topteams': $scope.category.topteams,
                    'strategy': $scope.category.strategy,
                    'matchtime': $scope.category.matchtime
                };
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editcategorydlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose:true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                }).then(
                    function(category_object) {
                        $http.post(Routing.generate('rest_category_update', { 'categoryid': $scope.category.id }), {
                            'name': dlgScope.category_object.name,
                            'gender': dlgScope.category_object.gender.id,
                            'classification': dlgScope.category_object.classification.id,
                            'age': dlgScope.category_object.age,
                            'trophys': dlgScope.category_object.trophys,
                            'topteams': dlgScope.category_object.topteams,
                            'strategy': dlgScope.category_object.strategy,
                            'matchtime': dlgScope.category_object.matchtime
                        })
                        .then(
                            function () {
                                $http.get(Routing.generate('_rest_list_categories', { 'tournamentid': $scope.tournament.id })).then(
                                    function(data) {
                                        $scope.categories = data.data;
                                        $scope.selectCategory(dlgScope.category.id);
                                        Tournament.setCategories($scope.categories);
                                    },
                                    function (response) {
                                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTCATEGORIES.CAPTION{% endtrans %}');
                                    });
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.CATEGORY.TITLE.ADD{% endtrans %}');
                            });
                    });
            };
            $scope.delCategory = function(ev) {
                $http.delete(Routing.generate('rest_category_delete', {'categoryid': $scope.category.id })).then(
                    function () {
                        $http.get(Routing.generate('_rest_list_categories', { 'tournamentid': $scope.tournament.id })).then(
                            function(data) {
                                $scope.categories = data.data;
                                $scope.selectedCategory = 0;
                                Tournament.setCategories($scope.categories);
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTCATEGORIES.CAPTION{% endtrans %}');
                            });
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.GROUP.TITLE.DEL{% endtrans %}');
                    });
            };
            $scope.categoryOptions = function(ev) {
                var dlgScope = $scope.$new();
                dlgScope.category_object = {
                    'name': $scope.category.name,
                    'gender': $scope.category.gender,
                    'classification': $scope.category.classification,
                    'age': $scope.category.age,
                    'trophys': $scope.category.trophys,
                    'topteams': $scope.category.topteams,
                    'strategy': $scope.category.strategy,
                    'matchtime': $scope.category.matchtime
                };
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editcatoptionsdlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose:true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                })
                .then(function(category_object) {
                    $http.post(Routing.generate('rest_category_update', {'categoryid': $scope.selectedCategory }), category_object).then(
                         function () {
                            var category = $scope.categories.find(function (category) {
                                return category.id == $scope.selectedCategory;
                            });
                            category.trophys = category_object.trophys;
                            category.topteams = category_object.topteams;
                            category.strategy = category_object.strategy;
                         },
                         function (response) {
                            ShowError($mdDialog, response.data.errors, '{% trans %}FORM.QMATCHPLANNING.OPTIONS{% endtrans %}');
                         });
                });
            };
            $scope.addGroup = function(ev) {
                var dlgScope = $scope.$new();
                dlgScope.group_object = {
                    'name': '',
                    'classification': 0
                };
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editgroupdlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose:true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                })
                .then(function(group_object) {
                    $http.post(Routing.generate('rest_group_create', {'categoryid': $scope.category.id }), group_object).then(
                        function () {
                            getGroups();
                        },
                        function (response) {
                            ShowError($mdDialog, response.data.errors, '{% trans %}FORM.GROUP.TITLE.ADD{% endtrans %}');
                        });
                });
            };
            $scope.deleteGroup = function (groupid) {
                $http.delete(Routing.generate('rest_group_delete', {'groupid': groupid })).then(
                    function (data) {
                        getGroups();
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.GROUP.TITLE.DEL{% endtrans %}');
                    });
            };
            $scope.assignVacant = function(groupid){
                $http.get(Routing.generate('_rest_assign_vacant', { 'groupid': groupid })).then(
                    function(data) {
                        getGroups();
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.QMATCHPLANNING.OPTIONS{% endtrans %}');
                    });
            };
            $scope.dataReady = true;
            $scope.selectedCategory = 0;
            $scope.selectCategory = function (id) {
                $scope.selectedCategory = id;
                $scope.category = $scope.categories.find(function (category) {
                    return category.id == id;
                });
                getGroups();
            };
            $scope.groups = [];
            $scope.unassigned = [];
            function getGroups() {
                $scope.dataReady = false;
                $http.get(Routing.generate('_rest_list_groups_with_teams', {'categoryid': $scope.selectedCategory })).then(
                    function (data) {
                        $scope.groups = data.data.groups;
                        $scope.unassigned = data.data.unassigned;
                        $scope.dataReady = true;
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.QMATCHPLANNING.GROUPS{% endtrans %}');
                        $scope.groups = [];
                        $scope.unassigned = [];
                        $scope.dataReady = true;
                    });
            }
        })
        /*
         ------------------------------------
         LIST VENUES
         ------------------------------------
         */
        .controller('venuesController', function($scope, $http, $mdDialog, $mdMedia, $mdToast, $document, Tournament, uiGmapGoogleMapApi, $filter, $locale, $log) {
            $scope.map = {
                zoom: 18,
                options: {
                    streetViewControl: false,
                    mapTypeControl: true,
                    scaleControl: false,
                    rotateControl: false,
                    zoomControl: true
                },
                showTraficLayer:false
            };
            $scope.marker = {
                options: {
                    draggable: false,
                    labelAnchor: "30 60",
                    labelClass: "bold"
                },
                events: {}
            };
            $scope.isOffline = true;
            uiGmapGoogleMapApi.then(function(maps) {
                $scope.googleVersion = maps.version;
                maps.visualRefresh = true;
                $scope.map.options.mapTypeId = google.maps.MapTypeId.SATELLITE;
                $scope.isOffline = false;
            });

            $scope.config = {
                cssClassPrefix: "calendar_icup",
                businessBeginsHour: 8,
                businessEndsHour: 24,
                columnMarginRight: 0,
                days: 3,
                locale: 'da-dk',    // de-de en-gb es-es fr-fr it-it pl-pl
                headerDateFormat: "ddd d. MMM",
                onTimeRangeSelected: function (args) {
                    $scope.dp.clearSelection();
                    var dlgScope = $scope.$new();
                    dlgScope.pattr_object = {
                        start: new DayPilot.Date(args.start.value),
                        end: new DayPilot.Date(args.end.value),
                        categories: [],
                        timeslot: { id: 0 },
                        finals: false,
                        classification: 0,
                        op: 'add'
                    };
                    pattrDialog(dlgScope, function() {
                        $http.post(Routing.generate('rest_pattr_create', {
                            playgroundid: $scope.selectedVenue,
                            timeslotid: dlgScope.pattr_object.timeslot.id,
                            categories: dlgScope.pattr_object.categories
                        }), {
                            date: dlgScope.pattr_object.start.toString('yyyy-MM-dd'),
                            start: dlgScope.pattr_object.start.toString('HH:mm'),
                            end: dlgScope.pattr_object.end.toString('HH:mm'),
                            finals: dlgScope.pattr_object.finals,
                            classification: dlgScope.pattr_object.classification
                        })
                        .then(
                            function (data) {
                                var catlist = [];
                                angular.forEach(dlgScope.pattr_object.categories, function(category) {
                                    this.push(category.name);
                                }, catlist);
                                var e = new DayPilot.Event({
                                    start: args.start,
                                    end: args.end,
                                    id: data.data.id,
                                    resource: args.resource,
                                    text: (dlgScope.pattr_object.finals ? '<span class="fa fa-trophy text-warning"></span><br />' : '<span class="fa fa-gavel text-info"></span><br />')+
                                        dlgScope.pattr_object.timeslot.name+
                                        (catlist.length > 0 ? '<br />'+catlist.join(',') : '')+
                                        (dlgScope.pattr_object.classification > 0 ? '<br />'+Translator.trans('GROUPCLASS.'+dlgScope.pattr_object.classification, {}, 'tournament') : '')
                                });
                                $scope.dp.events.add(e);
                                $mdToast.show(
                                        $mdToast.simple()
                                                .textContent('{% trans %}FORM.PLAYGROUNDATTR.UPDATED{% endtrans %}')
                                                .position('top right')
                                                .hideDelay(3000)
                                                .parent($document[0].querySelector('#dp'))
                                );
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.PLAYGROUNDATTR.TITLE.ADD{% endtrans %}');
                            });
                    });
                },
                onEventClicked: function (args) {
                    var pattrid = args.e.id();
                    var pattr = $scope.pattrs.find(function (pattr) {
                        return pattr.id == pattrid;
                    });
                    var dlgScope = $scope.$new();
                    dlgScope.pattr_object = {
                        start: new DayPilot.Date(args.e.start()),
                        end: new DayPilot.Date(args.e.end()),
                        categories: pattr.categories,
                        timeslot: pattr.timeslot,
                        finals: pattr.finals,
                        classification: pattr.classification ? pattr.classification : 0,
                        pattr: pattr,
                        op: 'chg'
                    };
                    pattrDialog(dlgScope, function() {
                        $http.post(Routing.generate('rest_pattr_update', {
                            pattrid: dlgScope.pattr_object.pattr.id,
                            timeslotid: dlgScope.pattr_object.timeslot.id,
                            categories: dlgScope.pattr_object.categories
                        }), {
                            date: dlgScope.pattr_object.start.toString('yyyy-MM-dd'),
                            start: dlgScope.pattr_object.start.toString('HH:mm'),
                            end: dlgScope.pattr_object.end.toString('HH:mm'),
                            finals: dlgScope.pattr_object.finals,
                            classification: dlgScope.pattr_object.classification
                        })
                        .then(
                            function () {
                                var catlist = [];
                                angular.forEach(dlgScope.pattr_object.categories, function(category) {
                                    this.push(category.name);
                                }, catlist);
                                var e = args.e;
                                e.text(
                                    (dlgScope.pattr_object.finals ? '<span class="fa fa-trophy text-warning"></span><br />' : '<span class="fa fa-gavel text-info"></span><br />')+
                                    dlgScope.pattr_object.timeslot.name+
                                    (catlist.length > 0 ? '<br />'+catlist.join(',') : '')+
                                    (dlgScope.pattr_object.classification > 0 ? '<br />'+Translator.trans('GROUPCLASS.'+dlgScope.pattr_object.classification, {}, 'tournament') : '')
                                );
                                $mdToast.show(
                                        $mdToast.simple()
                                                .textContent('{% trans %}FORM.PLAYGROUNDATTR.UPDATED{% endtrans %}')
                                                .position('top right')
                                                .hideDelay(3000)
                                                .parent($document[0].querySelector('#dp'))
                                );
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.PLAYGROUNDATTR.TITLE.CHG{% endtrans %}');
                            });
                    });
                },
                onEventResized: function (args) {
                    var pattrid = args.e.id();
                    var pattr = $scope.pattrs.find(function (pattr) {
                        return pattr.id == pattrid;
                    });
                    changePattr(pattr, new DayPilot.Date(args.newStart.value), new DayPilot.Date(args.newEnd.value));
                },
                onEventMoved: function (args) {
                    var pattrid = args.e.id();
                    var pattr = $scope.pattrs.find(function (pattr) {
                        return pattr.id == pattrid;
                    });
                    changePattr(pattr, new DayPilot.Date(args.newStart.value), new DayPilot.Date(args.newEnd.value));
                }
            };
            function changePattr(pattr, newStart, newEnd) {
                $http.post(Routing.generate('rest_pattr_update', {
                    pattrid: pattr.id,
                    timeslotid: pattr.timeslot.id,
                    categories: pattr.categories
                }), {
                    date: newStart.toString('yyyy-MM-dd'),
                    start: newStart.toString('HH:mm'),
                    end: newEnd.toString('HH:mm'),
                    finals: pattr.finals,
                    classification: pattr.classification
                })
                .then(
                    function () {
                        $mdToast.show(
                                $mdToast.simple()
                                        .textContent('{% trans %}FORM.PLAYGROUNDATTR.UPDATED{% endtrans %}')
                                        .position('top right')
                                        .hideDelay(3000)
                                        .parent($document[0].querySelector('#dp'))
                        );
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.PLAYGROUNDATTR.TITLE.CHG{% endtrans %}');
                    });
            }
            $scope.events = [];

            $scope.calendar = { date: new Date() };
            $http.get(Routing.generate('_rest_get_match_calendar', { 'tournamentid': $scope.tournament.id })).then(function(data) {
                $scope.calendar.minDate = new Date(data.data.start);
                $scope.calendar.maxDate = new Date(data.data.end);
                $scope.calendar.date = new Date(data.data.start);
            });

            $scope.$watch(function () { return $scope.calendar.date; }, function (newValue, oldValue) {
                if (newValue !== oldValue) {
                    $scope.dp.startDate = $filter('date')(newValue, 'yyyy-MM-dd');
                    $scope.dp.update();
                };
            });

            $scope.advanceDate = function () {
                if ($scope.calendar.date < $scope.calendar.maxDate) {
                    $scope.calendar.date.setDate($scope.calendar.date.getDate() + 1);
                    $scope.calendar.date = new Date($scope.calendar.date);
                }
            };
            $scope.descendDate = function () {
                if ($scope.calendar.date > $scope.calendar.minDate) {
                    $scope.calendar.date.setDate($scope.calendar.date.getDate() - 1);
                    $scope.calendar.date = new Date($scope.calendar.date);
                }
            };

            $scope.$watch(function () { return Tournament.getVenues(); }, function (newValue, oldValue) {
                if (newValue !== oldValue) $scope.venues = newValue;
            });
            $scope.$watch(function () { return Tournament.getSites(); }, function (newValue, oldValue) {
                if (newValue !== oldValue) $scope.sites = newValue;
            });
            $scope.$watch(function () { return Tournament.getTimeslots(); }, function (newValue, oldValue) {
                if (newValue !== oldValue) $scope.timeslots = newValue;
            });
            $scope.selectVenue = function (id) {
                $scope.selectedVenue = id;
                $scope.venue = $scope.venues.find(function (venue) {
                    return venue.id == id;
                });
                if ($scope.venue) {
                    var separator = $scope.venue.location.indexOf(',');
                    var lat = $scope.venue.location.substr(0, separator),
                        lng = $scope.venue.location.substr(separator+1);
                    $scope.map.center = { latitude: lat, longitude: lng };
                    $scope.marker.point = { latitude: lat, longitude: lng };
                    $scope.marker.options.labelContent = "{% trans %}FORM.PLAYGROUND.NO{% endtrans %}: " + $scope.venue.no;
                    $scope.marker.options.title = $scope.venue.name;
                }
                $http.get(Routing.generate('_rest_list_pattrs', { 'playgroundid': $scope.venue.id })).then(
                    function(data) {
                        $scope.pattrs = data.data;
                        $scope.events = [];
                        angular.forEach(data.data, function(pattr, key) {
                            var catlist = [];
                            angular.forEach(pattr.categories, function(category) {
                                this.push(category.name);
                            }, catlist);
                            this.push({
                                start: pattr.date.ts+"T"+pattr.start.ts+":00",
                                end: pattr.date.ts+"T"+pattr.end.ts+":00",
                                id: pattr.id,
//                                toolTip: pattr.timeslot.name,
                                text: (pattr.finals ? '<span class="fa fa-trophy text-warning"></span><br />' : '<span class="fa fa-gavel text-info"></span><br />')+
                                        pattr.timeslot.name+
                                        (catlist.length > 0 ? '<br />'+catlist.join(',') : '')+
                                        (pattr.classification > 0 ? '<br />'+Translator.trans('GROUPCLASS.'+pattr.classification, {}, 'tournament') : '')
                            });
                        }, $scope.events);
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTSITES.CAPTION{% endtrans %}');
                    });
            };
            $scope.addVenue = function(ev) {
                var dlgScope = $scope.$new();
                dlgScope.venue_object = {
                    name: '',
                    site: { 'id': 0 },
                    no: '',
                    location: false,
                    lat: 0,
                    lng: 0,
                    weight: 0,
                    op: 'add'
                };
                venueDialog(dlgScope, ev, function(venue_object) {
                    $http.post(Routing.generate('rest_playground_create', { 'siteid': dlgScope.venue_object.site.id }), {
                        'name': dlgScope.venue_object.name,
                        'no': dlgScope.venue_object.no,
                        'location': dlgScope.venue_object.location ?
                                        dlgScope.venue_object.lat+','+ dlgScope.venue_object.lng :
                                        '',
                        'weight': dlgScope.venue_object.weight
                    })
                    .then(
                        function (data) {
                            var newid = data.data.id;
                            $http.get(Routing.generate('_rest_list_playgrounds', { 'tournamentid': $scope.tournament.id })).then(
                                function(data) {
                                    $scope.venues = data.data;
                                    $scope.selectVenue(newid);
                                    Tournament.setVenues($scope.venues);
                                },
                                function (response) {
                                    ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTSITES.CAPTION{% endtrans %}');
                                });
                        },
                        function (response) {
                            ShowError($mdDialog, response.data.errors, '{% trans %}FORM.PLAYGROUND.TITLE.ADD{% endtrans %}');
                        });
                });
            };
            $scope.updateVenue = function(ev) {
                var dlgScope = $scope.$new();
                var separator = $scope.venue.location.indexOf(',');
                var lat = 42, lng = 13;
                if (separator >= 0) {
                    lat = $scope.venue.location.substr(0, separator);
                    lng = $scope.venue.location.substr(separator+1);
                }
                dlgScope.venue_object = {
                    name: $scope.venue.name,
                    site: $scope.venue.site,
                    no: $scope.venue.no,
                    location: separator >= 0,
                    lat: lat,
                    lng: lng,
                    weight: $scope.venue.weight,
                    op: 'chg'
                };
                venueDialog(dlgScope, ev, function(venue_object) {
                    $http.post(Routing.generate('rest_playground_update', { 'playgroundid': $scope.venue.id }), {
                        'name': dlgScope.venue_object.name,
                        'no': dlgScope.venue_object.no,
                        'location': dlgScope.venue_object.location ?
                                        dlgScope.venue_object.lat+','+ dlgScope.venue_object.lng :
                                        '',
                        'weight': dlgScope.venue_object.weight
                    })
                    .then(
                        function () {
                            $http.get(Routing.generate('_rest_list_playgrounds', { 'tournamentid': $scope.tournament.id })).then(
                                function(data) {
                                    $scope.venues = data.data;
                                    $scope.selectVenue(dlgScope.venue.id);
                                    Tournament.setVenues($scope.venues);
                                },
                                function (response) {
                                    ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTSITES.CAPTION{% endtrans %}');
                                });
                        },
                        function (response) {
                            ShowError($mdDialog, response.data.errors, '{% trans %}FORM.PLAYGROUND.TITLE.ADD{% endtrans %}');
                        });
                    });
            };
            $scope.delVenue = function(ev) {
                $http.delete(Routing.generate('rest_playground_delete', {'playgroundid': $scope.venue.id })).then(
                    function () {
                        $http.get(Routing.generate('_rest_list_playgrounds', { 'tournamentid': $scope.tournament.id })).then(
                            function(data) {
                                $scope.venues = data.data;
                                $scope.selectVenue(0);
                                Tournament.setVenues($scope.venues);
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTSITES.CAPTION{% endtrans %}');
                            });
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.PLAYGROUND.TITLE.DEL{% endtrans %}');
                    });
            };
            $scope.addSite = function(site) {
                $http.post(Routing.generate('rest_site_create', { tournamentid: $scope.tournament.id }), { name: site.name }).then(
                    function (data) {
                        site.id = data.data.id;
                        $scope.listSites(site);
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.PLAYGROUND.TITLE.ADD{% endtrans %}');
                        $scope.listSites({ id: 0 });
                    });
            };
            $scope.delSite = function(site) {
                $http.delete(Routing.generate('rest_site_delete', { siteid: site.id })).then(
                    function () {
                        $scope.listSites({ id: 0 });
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.SITE.TITLE.DEL{% endtrans %}');
                        $scope.listSites({ id: 0 });
                    });
            };
            $scope.selectSite = function(selectedSite) {
                $scope.selectedSite = selectedSite.id;
                $scope.site = $scope.sites.find(function (site) {
                    return site.id == selectedSite.id;
                });
                $scope.selectVenue(0);
            };
            $scope.transformSite = function(sitename) {
                return { id: 0, name: sitename };
            };
            $scope.siteFilter = function (venue) {
                if ($scope.selectedSite) {
                    if (venue.site.id != $scope.selectedSite) return false;
                }
                return true;
            };
            $scope.listSites = function(site) {
                $scope.selectVenue(0);
                $http.get(Routing.generate('_rest_list_sites', { tournamentid: $scope.tournament.id })).then(
                    function(data) {
                        $scope.sites = data.data;
                        Tournament.setSites($scope.sites);
                        $scope.selectSite(site);
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTSITES.CAPTION{% endtrans %}');
                        $scope.selectSite({ id: 0 });
                    });
            };
            function venueDialog(dlgScope, ev, submitfn) {
                var lat = 42, lng = 13;
                if (dlgScope.venue_object.location) {
                    lat = dlgScope.venue_object.lat;
                    lng = dlgScope.venue_object.lng;
                }
                dlgScope.map = {
                    center: { latitude: lat, longitude: lng },
                    zoom: 15,
                    options: {
                        mapTypeId: google.maps.MapTypeId.ROADMAP,
                        streetViewControl: false,
                        mapTypeControl: true,
                        scaleControl: false,
                        rotateControl: false,
                        zoomControl: true
                    }
                };
                dlgScope.marker = {
                    point: { latitude: lat, longitude: lng },
                    options: {
                        draggable: true,
                        labelContent: "{% trans %}FORM.PLAYGROUND.NO{% endtrans %}: " + dlgScope.venue_object.no,
                        title: dlgScope.venue_object.name,
                        labelAnchor: "30 60",
                        labelClass: "bold"
                    },
                    events: {
                        dragend:
                            function (marker, eventName, args) {
                                dlgScope.venue_object.lat = marker.getPosition().lat();
                                dlgScope.venue_object.lng = marker.getPosition().lng();
                            }
                    }
                };
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editvenuedlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose:true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                }).then(submitfn);
            }
            function pattrDialog(dlgScope, submitfn) {
                $mdDialog.show({
                    controller: function ($scope, $mdDialog) {
                        $scope.submit = function(pattr_object) {
                            pattr_object.categories = [];
                            angular.forEach(this.categoryList, function(category) {
                                if (category.selected) {
                                    this.push(category);
                                }
                            }, pattr_object.categories);
                            $mdDialog.hide(pattr_object);
                        };
                        $scope.cancel = function() {
                            $mdDialog.cancel();
                        };
                    },
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editpattrdlg.html') }}',
                    parent: angular.element(document.body),
                    clickOutsideToClose:true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                }).then(submitfn);
            }
        })
        .controller('CategoryCtrl', function($scope) {
            $scope.$parent.categoryList = [];
            angular.forEach($scope.$parent.categories, function (category) {
                var cat = $scope.$parent.pattr_object.categories.find(function (ctg) {
                    return ctg.id == category.id;
                });
                this.push({
                    id: category.id,
                    name: category.name,
                    classification_translated: category.classification_translated,
                    selected: cat != null
                });
            }, $scope.$parent.categoryList);
        })
        /*
         ------------------------------------
         LIST CLUBS
         ------------------------------------
         */
        .controller('listClubsController', function($scope, $http, $mdDialog, $mdMedia, $mdToast, Tournament) {
            $scope.updateClub = function (club, ev) {
                $scope.club = club;
                var dlgScope = $scope.$new();
                dlgScope.club_object = {
                    'name': $scope.club.name,
                    'country': $scope.club.country_code
                };
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editclubdlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose:true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                }).then(
                        function(club_object) {
                            $http.post(Routing.generate('rest_club_update', {'clubid': $scope.club.id }), club_object).then(
                                    function (data) {
                                        $scope.club.name = club_object.name;
                                        $mdToast.show(
                                                $mdToast.simple()
                                                        .textContent('{% trans %}FORM.CLUB.UPDATED{% endtrans %}')
                                                        .position('top right')
                                                        .hideDelay(3000)
                                        );
                                    },
                                    function (response) {
                                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.CLUB.TITLE.CHG{% endtrans %}');
                                    });
                        });
            };
            $scope.updateEnrollment = function (club, ev) {
                $scope.club = club;
                var dlgScope = $scope.$new();
                $http.get(Routing.generate('_rest_list_enrolled_teams', { 'tournamentid': $scope.tournament.id, 'clubid': club.id })).then(
                        function(data) {
                            dlgScope.categories = data.data;
                        });
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editenrolleddlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose:true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                });
            };
            $scope.addEnrollment = function (category, club) {
                $scope.club = club;
                $http.get(Routing.generate('_rest_club_enroll_add', { 'categoryid': category.id, 'clubid': club.id })).then(
                        function() {
                            category.enrolled++;
                            club.enrolled++;
                        },
                        function (response) {
                            ShowError($mdDialog, response.data.errors, '{% trans from 'club' %}FORM.LISTENROLLED.TITLE{% endtrans %}');
                        });
            };
            $scope.removeEnrollment = function (category, club) {
                $scope.club = club;
                $http.get(Routing.generate('_rest_club_enroll_del', { 'categoryid': category.id, 'clubid': club.id })).then(
                        function() {
                            category.enrolled--;
                            club.enrolled--;
                        },
                        function (response) {
                            ShowError($mdDialog, response.data.errors, '{% trans from 'club' %}FORM.LISTENROLLED.TITLE{% endtrans %}');
                        });
            };
            $scope.dataReady = false;
            $scope.countries = [];
            $http.get(Routing.generate('_rest_list_clubs', { 'tournamentid': $scope.tournament.id })).then(function(data) {
                angular.forEach(data.data, function (club) {
                    var country = $scope.countries.find(function (country) {
                        return country.country_code == club.country_code;
                    });
                    if (country) {
                        country.clubs.push(club);
                    }
                    else {
                        $scope.countries.push({
                            'name': club.country,
                            'country_code': club.country_code,
                            'flag': club.flag,
                            'clubs': [club]
                        });
                    }
                });
                $scope.dataReady = true;
            });
            $scope.team_categories = [];
            $scope.$watch(function () { return Tournament.getCategories(); }, function (newValue, oldValue) {
                if (newValue !== oldValue) {
                    $http.get(Routing.generate('_rest_list_enrolled_categories', { 'tournamentid': $scope.tournament.id })).then(
                            function(data) {
                                $scope.team_categories = data.data;
                            });
                }
            });
        })
        /*
         ------------------------------------
         MATCH PLANNING
         ------------------------------------
         */
        .controller('matchPlanningController', function($scope, $http, $mdDialog, $mdMedia, $filter, $mdBottomSheet, $mdToast, $document, Tournament) {
            $scope.matches = [];
            $scope.unassigned_categories = [];
            $scope.matches_planned = false;
            $scope.planning_level = -1;
            $scope.search_object = {
                'team': { 'id': 0 },
                'category': { 'id': 0 },
                'group': { 'id': 0 },
                'venue': { 'id': 0 }
            };
            $scope.$watch(function () { return Tournament.getCategories(); }, function (newValue, oldValue) {
                if (newValue !== oldValue) {
                    $scope.categories = newValue;
                    GetMatchesPlanned();
                }
            });
            // limit number of matches shown
            $scope.limit = 10;
            $http.get(Routing.generate('_rest_get_match_calendar', { 'tournamentid': $scope.tournament.id })).then(function(data) {
                $scope.minDate = new Date(data.data.start);
                $scope.maxDate = new Date(data.data.end);
            });
            // watch the change of category and update the groups accordingly
            $scope.$watch(
                function () {
                    return $scope.search_object.category.id;
                },
                function (id, previous_id) {
                    if (id) {
                        $http.get(Routing.generate('_rest_list_groups', { 'categoryid': id })).then(
                            function(data) {
                                $scope.groups = data.data;
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.QMATCHPLANNING.GROUPS{% endtrans %}');
                            });
                    }
            });
            $scope.matchFilter = function (match) {
                if ($scope.search_object.team.id) {
                    if (match.home.name != $scope.search_object.team.name && match.away.name != $scope.search_object.team.name) return false;
                }
                if ($scope.search_object.category.id) {
                    if (match.category.id != $scope.search_object.category.id) return false;
                }
                if ($scope.search_object.group.id) {
                    if (match.group.id != $scope.search_object.group.id) return false;
                }
                if ($scope.search_object.venue.id) {
                    if (match.venue.id != $scope.search_object.venue.id) return false;
                }
                if ($scope.search_object.date) {
                    if (match.date.raw != $filter('date')($scope.search_object.date, 'yyyyMMdd')) return false;
                }
                return true;
            };
            GetMatchesPlanned();
            $scope.planMatches = function (ev) {
                var dlgScope = $scope.$new();
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/planmatchdlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose:true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                })
                .then(function() {});
                planTournament(0, dlgScope);
            };
            $scope.savePlan = function () {
                $http.get(Routing.generate('_rest_match_planning_save_plan', { 'tournamentid': $scope.tournament.id })).then(
                    function(data) {
                        $mdToast.show(
                                $mdToast.simple()
                                        .textContent("{% trans %}FORM.MATCHPLANNING.SAVE.DONE{% endtrans %}")
                                        .position('top right')
                                        .hideDelay(5000)
                                        .parent($document[0].querySelector('#toastAnchor'))

                        );
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.MATCHPLANNING.SAVE.TITLE{% endtrans %}');
                    });
            };
            $scope.resetPlan = function () {
                $http.get(Routing.generate('_rest_match_planning_reset_plan', { 'tournamentid': $scope.tournament.id })).then(
                    function(data) {
                        $scope.unassigned_categories = [];
                        $scope.matches_planned = false;
                        $scope.planning_level = -1;
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.MATCHPLANNING.RESET.TITLE{% endtrans %}');
                    });
            };
            $scope.uploadPlan = function(ev) {
                var dlgScope = $scope.$new();
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/matchimportdlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose: true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                })
                .then(function () {
                    //create form data object
                    var r = new FileReader();
                    r.onload = function(e){
                        var fd = new FormData();
                        fd.append('file', e.target.result);
                        $http.post(Routing.generate('_rest_import_match_schedule', {'tournamentid': $scope.tournament.id}), fd, {
                            transformRequest: angular.identity,
                            headers: {'Content-Type': undefined}
                        }).then(
                            function (response) {
                                $mdToast.show(
                                    $mdToast.simple()
                                            .textContent(Translator.trans('FORM.MATCHPLANNING.MATCHIMPORT.DONE', { 'matches': response.data.status.count, 'file': dlgScope.uploadFile.name }, 'admin'))
                                            .position('top right')
                                            .hideDelay(10000)
                                            .parent($document[0].querySelector('#toastAnchor'))

                                );
                                GetMatchesPlanned();
                            },
                            function (response) {
                                ShowError($mdDialog, response.data.errors, '{% trans %}FORM.MATCHPLANNING.MATCHIMPORT.TITLE{% endtrans %}');
                            });
                    };
                    if (dlgScope.uploadFile.type == 'text/plain') {
                        r.readAsText(dlgScope.uploadFile);
                    }
                    else {
                        ShowError($mdDialog, ['{% trans %}FORM.MATCHPLANNING.MATCHIMPORT.INVALIDFILE{% endtrans %}'], '{% trans %}FORM.MATCHPLANNING.MATCHIMPORT.TITLE{% endtrans %}');
                    }
                });
            };
            $scope.editMatch = function (match, ev) {
                this.msover = false;
                var dlgScope = $scope.$new();
                dlgScope.match = match;
                dlgScope.destination_object = { 'date': new Date(match.date.js), 'time': match.time.text, 'venue': match.venue, 'timeslot': match.timeslot };
                dlgScope.matchFilter = function (match) {
                    if (dlgScope.destination_object.timeslot.id) {
                        if (match.timeslot.id != dlgScope.destination_object.timeslot.id) return false;
                    }
                    if (dlgScope.destination_object.venue.id) {
                        if (match.venue.id != dlgScope.destination_object.venue.id) return false;
                    }
                    if (dlgScope.destination_object.date) {
                        if (match.date.raw != $filter('date')(dlgScope.destination_object.date, 'yyyyMMdd')) return false;
                    }
                    return true;
                };
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editplanmatchdlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose: true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                })
                .then(function() {
                    var matchData = {
                        'timeslot': dlgScope.destination_object.timeslot.id,
                        'venue': dlgScope.destination_object.venue.id,
                        'date': $filter('date')(dlgScope.destination_object.date, 'yyyyMMdd'),
                        'matchtime': dlgScope.destination_object.time
                    };
                    $http.post(Routing.generate('_rest_match_planning_update_match', {'matchtype': dlgScope.match.uid.substr(0,1), 'matchid': dlgScope.match.uid.substr(1) }), matchData).then(
                        function (data) {
                            $mdToast.show(
                                    $mdToast.simple()
                                            .textContent("Match updated")
                                            .position('top right')
                                            .hideDelay(3000)
                                            .parent($document[0].querySelector('#toastAnchor'))

                            );
                            GetMatchesPlanned();
                            $mdToast.hide();
                        },
                        function (response) {
                            ShowError($mdDialog, response.data.errors, '{% trans %}FORM.CLUB.TITLE.CHG{% endtrans %}');
                        });
                });
            };
            function GetMatchesPlanned() {
                $http.get(Routing.generate('_rest_match_planning_get_plan', { 'tournamentid': $scope.tournament.id })).then(
                    function(data) {
                        $scope.unassigned_categories = data.data.unassigned_by_category;
                        $scope.matches_planned = data.data.matches.length > 0;
                        $scope.matches = data.data.matches;
                        var teams = {};
                        angular.forEach($scope.matches, function (match) {
                            if (match.uid < 'Q') {
                                if (match.home.id) {
                                    teams[match.home.name] = match.home;
                                }
                                if (match.away.id) {
                                    teams[match.away.name] = match.away;
                                }
                            }
                        });
                        $scope.teams = [];
                        angular.forEach(teams, function (team) {
                            $scope.teams.push(team);
                        });
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.QMATCHPLANNING.GROUPS{% endtrans %}');
                    });
            }
            function planTournament(level, dlgScope) {
                dlgScope.planning_level = level;
                $http.get(Routing.generate('_rest_match_planning_plan', { 'tournamentid': $scope.tournament.id, 'level': level })).then(
                    function(result) {
                        if (result.data.done) {
                            dlgScope.planning_level = result.data.level;
                            $scope.unassigned_categories = result.data.unassigned_by_category;
                            $scope.matches_planned = true;
                            $scope.planning_level = result.data.level;
                            dlgScope.planning_status = '{% trans %}FORM.MATCHPLANNING.PLANNING.DONE{% endtrans %}';
                            GetMatchesPlanned();
                        }
                        else {
                            planTournament(result.data.level, dlgScope);
                        }
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.MATCHPLANNING.PLANNING.ERROR{% endtrans %}');
                    });
            }
        });
    </script>
{% endblock %}
