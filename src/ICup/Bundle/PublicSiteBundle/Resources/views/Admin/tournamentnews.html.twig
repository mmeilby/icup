{% extends "ICupPublicSiteBundle:Masters:edit.html.twig" %}
{% trans_default_domain "admin" %}

{% block adminbody %}
    <div ng-app="tournamentNewsModule">
        <div ng-controller="tournamentNewsController" ng-cloak>
            <section layout="column">
                <md-content flex>
                    <md-content flex>
                        <md-toolbar class="md-menu-toolbar">
                            <div layout="row">
                                <md-toolbar-filler layout layout-align="center center" style="background-color: #8c8c8c; color: white">
                                    <span class="fa fa-4x fa-cogs"></span>
                                </md-toolbar-filler>
                                <div class="md-padding">
                                    <h2>{{ 'FORM.LISTNEWS.TITLE'|trans|upper }}</h2>
                                    <p>{% trans %}FORM.LISTNEWS.CAPTION{% endtrans %}</p>
                                </div>
                            </div>
                        </md-toolbar>
                    </md-content>
                    <md-content flex>
                        <div class="row">
                            <div class="col-md-12 md-padding">
                                <md-button class="md-raised md-hue-1" ng-class="{'md-primary': news.length==0}" ng-click="addNews($event)">
                                    <span class="fa fa-file"></span>&nbsp;{% trans %}FORM.LISTNEWS.NONEWS{% endtrans %}
                                </md-button>
                            </div>
                        </div>
                        <div class="row title">
                            <div class="col-md-1 text-center">{% trans %}FORM.NEWS.NO{% endtrans %}</div>
                            <div class="col-md-4">{% trans %}FORM.NEWS.SUBJECT{% endtrans %}</div>
                            <div class="col-md-1">{% trans %}FORM.NEWS.LANGUAGE{% endtrans %}</div>
                            <div class="col-md-3">{% trans %}FORM.NEWS.DATE{% endtrans %}</div>
                            <div class="col-md-3">{% trans %}FORM.NEWS.TYPE{% endtrans %}</div>
                        </div>
                        <div class="row" ng-class-odd="'bg-table-row'"
                             ng-repeat="newsrec in news | orderBy: ['-date', 'newsno', 'language'] as results track by newsrec.id"
                        >
                            <div class="col-md-1 text-center" ng-click="editNews(newsrec, $event)">{{ '{{ newsrec.newsno }}' }}</div>
                            <div class="col-md-4" ng-click="editNews(newsrec, $event)">{{ '{{ newsrec.title }}' }}</div>
                            <div class="col-md-1" ng-click="editNews(newsrec, $event)">{{ "{{ 'LANG_LOCAL.'+newsrec.language | uppercase | translate:'common' }}" }}</div>
                            <div class="col-md-3" ng-click="editNews(newsrec, $event)">{{ "{{ newsrec.date.ts | date:'fullDate' | capitalize }}" }}</div>
                            <div class="col-md-2" ng-click="editNews(newsrec, $event)">{{ "{{ 'FORM.NEWS.TYPES.'+newsrec.newstype | translate }}" }}</div>
                            <div class="col-md-1 text-center" ng-click="trashNews(newsrec, $event)"><span class="fa fa-times text-danger"></span></div>
                        </div>
                    </md-content>
                </md-content>
            </section>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script src="{{ url('bazinga_jstranslation_js', { 'domain': 'errors' }) }}"></script>
<script src="{{ url('bazinga_jstranslation_js', { 'domain': 'admin' }) }}"></script>
<script src="{{ url('bazinga_jstranslation_js', { 'domain': 'tournament' }) }}"></script>
<script src="{{ url('bazinga_jstranslation_js', { 'domain': 'common' }) }}"></script>
<script type="text/javascript">
    angular.module('tournamentNewsModule', ['ngMaterial', 'ngMessages', 'ngDraggable'])
        .filter("translate", function() {
            return function(key, domain, vars){
                return Translator.trans(key, vars ? vars : {}, domain ? domain : 'admin');
            }
        })
        .filter("capitalize", function($filter) {
            return function(text){
                return $filter('uppercase')(text.substring(0,1))+text.substring(1);
            }
        })
        /*
         ------------------------------------
         TOURNAMENT BOARD
         ------------------------------------
         */
        .controller('tournamentNewsController', function($scope, $http, $mdDialog, $locale, $mdMedia, $filter) {
            $scope.flagsDir = "{{ asset('bundles/icuppublicsite/images/flags/') }}";
            $scope.tournament = { 'id': {{ tournament.id }} };
            $scope.locales = {{ languages | raw }};
            $scope.newstypes = {{ newstypes | raw }};
            GetNews();
            $scope.categories = [];
            $http.get(Routing.generate('_rest_list_categories', { 'tournamentid': $scope.tournament.id })).then(
                function(data) {
                    $scope.categories = data.data;
                },
                function (response) {
                    ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTCATEGORIES.CAPTION{% endtrans %}');
                });
            $scope.addNews = function (ev) {
                var dlgScope = $scope.$new();
                var next_newsno = 1;
                angular.forEach($scope.news, function (newsrec) {
                    if (newsrec.newsno >= next_newsno) {
                        next_newsno = newsrec.newsno+1;
                    }
                });
                dlgScope.news_object = {
                    'date': new Date(),
                    'newsno': next_newsno,
                    'language': $scope.locales.find(function (locale) { return locale.id == $locale.id.substr(0,2) }),
                    'newstype': $scope.newstypes.find(function (newstype) { return newstype.id == 1 }),
                    'title': '',
                    'context': '',
                    'matchno': '',
                    'match': { 'id': 0 },
                    'category': { 'id': 0 },
                    'team': { 'id': 0 }
                };
                dlgScope.title = 'FORM.NEWS.TITLE.ADD';
                dlgScope.subtitle = 'FORM.NEWS.PROMPT.ADD';
                dlgScope.submit_caption = 'FORM.NEWS.SUBMIT.ADD';
                dlgScope.cancel_caption = 'FORM.NEWS.CANCEL.ADD';
                dlgScope.teams = [];
                // watch the change of category and update the groups accordingly
                dlgScope.$watch(
                    function () {
                        return dlgScope.news_object.category.id;
                    },
                    function (id, previous_id) {
                        if (id) {
                            GetTeams(id, dlgScope);
                        }
                    });
                // watch the change of matchno and update the match accordingly
                dlgScope.$watch(
                    function () {
                        return dlgScope.news_object.matchno;
                    },
                    function (no, previous_no) {
                        if (no) {
                            GetMatch(no, dlgScope);
                        }
                    });
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editnewsdlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose: true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                })
                .then(function() {
                    var add_news = {
                        'date': $filter('date')(dlgScope.news_object.date, 'yyyy-MM-dd'),
                        'newsno': dlgScope.news_object.newsno,
                        'language': dlgScope.news_object.language.id,
                        'newstype': dlgScope.news_object.newstype.id,
                        'title': dlgScope.news_object.title,
                        'context': dlgScope.news_object.context
                    };
                    $http.post(Routing.generate('rest_news_create', {
                        'tournamentid': $scope.tournament.id,
                        'matchid': dlgScope.news_object.match.id,
                        'teamid': dlgScope.news_object.team.id
                    }), add_news).then(
                        function(data) {
                            GetNewsRecord(data.data.id);
                        },
                        function (response) {
                            ShowError($mdDialog, response.data.errors, '{% trans %}FORM.NEWS.TITLE.ADD{% endtrans %}');
                        });
                });
            };
            $scope.editNews = function (newsrec, ev) {
                var dlgScope = $scope.$new();
                dlgScope.news_object = {
                    'date': new Date(newsrec.date.js),
                    'newsno': newsrec.newsno,
                    'language': $scope.locales.find(function (locale) { return locale.id == newsrec.language }),
                    'newstype': $scope.newstypes.find(function (newstype) { return newstype.id == newsrec.newstype }),
                    'title': newsrec.title,
                    'context': newsrec.context,
                    'matchno': newsrec.match.id > 0 ? newsrec.match.matchno : '',
                    'match': newsrec.match,
                    'category': newsrec.category,
                    'team': newsrec.team
                };
                dlgScope.title = 'FORM.NEWS.TITLE.CHG';
                dlgScope.subtitle = 'FORM.NEWS.PROMPT.CHG';
                dlgScope.submit_caption = 'FORM.NEWS.SUBMIT.CHG';
                dlgScope.cancel_caption = 'FORM.NEWS.CANCEL.CHG';
                dlgScope.teams = [];
                // watch the change of category and update the groups accordingly
                dlgScope.$watch(
                    function () {
                        return dlgScope.news_object.category.id;
                    },
                    function (id, previous_id) {
                        if (id) {
                            GetTeams(id, dlgScope);
                        }
                    });
                // watch the change of matchno and update the match accordingly
                dlgScope.$watch(
                    function () {
                        return dlgScope.news_object.matchno;
                    },
                    function (no, previous_no) {
                        if (no) {
                            GetMatch(no, dlgScope);
                        }
                    });
                $mdDialog.show({
                    controller: DialogController,
                    scope: dlgScope,
                    templateUrl: '{{ asset('bundles/icuppublicsite/templates/editnewsdlg.html') }}',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose: true,
                    fullscreen: $mdMedia('sm') || $mdMedia('xs')
                })
                .then(function() {
                    var update_news = {
                        'date': $filter('date')(dlgScope.news_object.date, 'yyyy-MM-dd'),
                        'newsno': dlgScope.news_object.newsno,
                        'language': dlgScope.news_object.language.id,
                        'newstype': dlgScope.news_object.newstype.id,
                        'title': dlgScope.news_object.title,
                        'context': dlgScope.news_object.context,
                    };
                    $http.post(Routing.generate('rest_news_update', {
                        'newsid': newsrec.id,
                        'matchid': dlgScope.news_object.match.id,
                        'teamid': dlgScope.news_object.team.id
                    }), update_news).then(
                        function(data) {
                            GetNewsRecord(newsrec.id);
                        },
                        function (response) {
                            ShowError($mdDialog, response.data.errors, '{% trans %}FORM.NEWS.TITLE.CHG{% endtrans %}');
                        });
                });
            };
            $scope.trashNews = function (newsrec, ev) {
                $mdDialog.show($mdDialog.alert().title('{% trans %}FORM.NEWS.TITLE.DEL{% endtrans %}').textContent('{% trans %}FORM.NEWS.PROMPT.DEL{% endtrans %}').clickOutsideToClose(true).ok('{% trans %}FORM.CLOSE{% endtrans %}'));
                $http.delete(Routing.generate('rest_news_delete', { 'newsid': newsrec.id })).then(
                    function(data) {
                        var idx = $scope.news.findIndex(function (newsitem) { return newsitem.id == newsrec.id });
                        $scope.news.splice(idx, 1);
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTNEWS.TITLE{% endtrans %}');
                    });
            };
            function GetNews() {
                $http.get(Routing.generate('_rest_list_news', { 'tournamentid': $scope.tournament.id })).then(
                    function(data) {
                        $scope.news = data.data;
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTNEWS.TITLE{% endtrans %}');
                    });
            }
            function GetNewsRecord(newsid) {
                $http.get(Routing.generate('rest_get_news', { 'newsid': newsid })).then(
                    function(data) {
                        var idx = $scope.news.findIndex(function (newsitem) { return newsitem.id == newsid });
                        if (idx >= 0) {
                            $scope.news.splice(idx, 1, data.data.news);
                        }
                        else {
                            $scope.news.push(data.data.news);
                        }
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTNEWS.TITLE{% endtrans %}');
                    });
            }
            function GetTeams(id, dlgScope) {
                $http.get(Routing.generate('_rest_list_groups_with_teams', { 'categoryid': id })).then(
                    function(data) {
                        dlgScope.teams = [];
                        angular.forEach(data.data.groups, function (rec) {
                            angular.forEach(rec.teams, function (team) {
                                dlgScope.teams.push({ 'id': team.id, 'name': team.name, 'group': rec.group.name, 'country': team.country, 'flag': team.flag });
                            });
                        });
                        angular.forEach(data.data.unassigned.teams, function (team) {
                            dlgScope.teams.push(team);
                        });
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTCLUBS.CAPTION{% endtrans %}');
                    });
            };
            function GetMatch(no, dlgScope) {
                $http.get(Routing.generate('_rest_get_match', { 'tournamentid': $scope.tournament.id, 'matchno': no })).then(
                    function(data) {
                        dlgScope.news_object.match = data.data;
                    },
                    function (response) {
                        ShowError($mdDialog, response.data.errors, '{% trans %}FORM.LISTMATCHES.TITLE{% endtrans %}');
                    });
            }
        });
    function DialogController($scope, $mdDialog) {
        $scope.submit = function(param) {
            $mdDialog.hide(param);
        };
        $scope.cancel = function() {
            $mdDialog.cancel();
        };
    };
    function ShowError($mdDialog, errors, title) {
        var error = Translator.trans('ERROR.'+errors.join('.')+'.TITLE', {}, 'errors');
        var solution = Translator.trans('ERROR.'+errors.join('.')+'.SOLUTION', {}, 'errors');
        $mdDialog.show($mdDialog.alert().clickOutsideToClose(true).title(error).textContent(solution).ok('{% trans %}FORM.CLOSE{% endtrans %}'));
    };
</script>
{% endblock %}
